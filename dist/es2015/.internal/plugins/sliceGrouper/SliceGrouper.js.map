{"version":3,"file":"SliceGrouper.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/sliceGrouper/SliceGrouper.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Plugin for automatically grouping small chart slices into single group.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Plugin } from \"../../core/utils/Plugin\";\r\nimport { PercentSeries } from \"../../charts/series/PercentSeries\";\r\nimport { FunnelSlice, IFunnelSliceProperties } from \"../../charts/elements/FunnelSlice\";\r\nimport { PercentChart } from \"../../charts/types/PercentChart\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Optional } from \"../../core/utils/Type\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { Component } from \"../../core/Component\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A plugin which automatically groups [[PercenSeries]] slices that are smaller\r\n * than certain percent into one \"Other\" slice.\r\n *\r\n * By pushing an instance of [[SliceGrouper]] into `plugin` list of\r\n * any [[PercentSeries]], it automatically applies the functionality.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.valueY = \"value\";\r\n * series.dataFields.dateX = \"date\";\r\n *\r\n * let grouper = series.plugins.push(new am4plugins_sliceGrouper.SliceGrouper());\r\n * ```\r\n * ```JavaScript\r\n * var series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.valueY = \"value\";\r\n * series.dataFields.dateX = \"date\";\r\n *\r\n * var grouper = series.plugins.push(new am4plugins_sliceGrouper.SliceGrouper());\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     // ...\r\n *   }, {\r\n *     \"type\": \"PieSeries\",\r\n *     \"dataFields\": {\r\n *       \"valueY\": \"value\",\r\n *       \"dateX\": \"date\"\r\n *     },\r\n *     \"plugins\": [{\r\n *       \"type\": \"SliceGrouper\"\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.3.11\r\n */\r\nexport class SliceGrouper extends Plugin {\r\n\r\n\t/**\r\n\t * A series object that will need its slices grouped.\r\n\t */\r\n\tpublic target: Optional<PercentSeries>;\r\n\r\n\t/**\r\n\t * A reference to \"Other\" slice.\r\n\t */\r\n\tpublic groupSlice: Sprite;\r\n\r\n\t/**\r\n\t * A list of small slices that do not satisfy `threshold`.\r\n\t */\r\n\tpublic smallSlices: List<Sprite | Slice | FunnelSlice> = new List();\r\n\r\n\t/**\r\n\t * A list of big slices that do not satisfy `threshold`.\r\n\t */\r\n\tpublic bigSlices: List<Sprite | Slice | FunnelSlice> = new List();\r\n\r\n\t/**\r\n\t * A name to use for the \"Other\" slice.\r\n\t *\r\n\t * @default \"Other\"\r\n\t */\r\n\tpublic groupName: string = \"Other\";\r\n\r\n\t/**\r\n\t * Custom properties to apply to the \"Other\" slice.\r\n\t *\r\n\t * @since 4.5.3\r\n\t * @type {IFunnelSliceProperties}\r\n\t */\r\n\tpublic groupProperties: IFunnelSliceProperties = {};\r\n\r\n\t/**\r\n\t * If set to `true` the legend will be synced to show currently visible\r\n\t * slices only.\r\n\t *\r\n\t * @defaylt false\r\n\t */\r\n\tpublic syncLegend: boolean = false;\r\n\r\n\t/**\r\n\t * Threshold percent.\r\n\t */\r\n\tprotected _threshold: number = 5;\r\n\r\n\t/**\r\n\t * Maximum number of slices.\r\n\t */\r\n\tprotected _limit: Optional<number>;\r\n\r\n\t/**\r\n\t * Zoom out button. Shown when \"Other\" slice is broken down to zoom back\r\n\t * out to \"Other\".\r\n\t */\r\n\tprotected _zoomOutButton: ZoomOutButton;\r\n\r\n\t/**\r\n\t * Disposer for click events.\r\n\t */\r\n\tprotected _clickDisposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * What happens when \"Other\" slice is cicked.\r\n\t */\r\n\tprotected _clickBehavior: \"none\" | \"break\" | \"zoom\" = \"none\";\r\n\r\n\tprotected _ignoreDataUpdate: boolean = false;\r\n\r\n\t/**\r\n\t * Is group slice currently closed or expanded?\r\n\t */\r\n\tprotected _closed: boolean = true;\r\n\r\n\tprotected _dataProvider: Component;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Nothing to do here\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tsuper.init();\r\n\t\tthis.processSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates series with required events and adapters used to hijack its\r\n\t * data.\r\n\t */\r\n\tprivate processSeries(): void {\r\n\r\n\t\tconst series = this.target;\r\n\t\tconst chart = <PercentChart>series.chart;\r\n\t\tconst dataProvider: Component = series.data && series.data.length ? series : chart;\r\n\t\tthis._dataProvider = dataProvider;\r\n\r\n\t\t// Invalidate calculated data whenever data updates\r\n\t\tconst event = (options.queue || options.onlyShowOnViewport) && !chart.inited ? \"inited\" : \"datavalidated\";\r\n\t\tthis._disposers.push(dataProvider.events.on(event, (ev) => {\r\n\r\n\t\t\tif (this._ignoreDataUpdate) {\r\n\t\t\t\tthis._ignoreDataUpdate = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupSlice = undefined;\r\n\t\t\tthis.smallSlices.clear();\r\n\t\t\tthis.bigSlices.clear();\r\n\r\n\t\t\t// Collect and prepare small slices\r\n\t\t\tlet groupValue = 0;\r\n\t\t\tlet groupSliceItem;\r\n\t\t\tseries.dataItems.each((item, index) => {\r\n\t\t\t\tlet value = item.values.value.percent;\r\n\t\t\t\tif ((<any>item.dataContext).sliceGrouperOther) {\r\n\t\t\t\t\tgroupSliceItem = item.dataContext;\r\n\t\t\t\t}\r\n\t\t\t\telse if ((this.limit && (index >= this.limit)) || (!this.limit && (Math.abs(value) <= Math.abs(this.threshold)))) {\r\n\t\t\t\t\tgroupValue += item.value;\r\n\t\t\t\t\titem.hiddenInLegend = true;\r\n\t\t\t\t\titem.hide();\r\n\t\t\t\t\titem.hidden = true;\r\n\r\n\t\t\t\t\t// We need this in order to handle conflict with responsive\r\n\t\t\t\t\t// functionality\r\n\t\t\t\t\titem.label.events.on(\"transitionended\", (ev) => {\r\n\t\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\t\titem.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.smallSlices.push(item.slice);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.bigSlices.push(item.slice);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Create \"Other\" slice\r\n\t\t\tif (groupValue != 0) {\r\n\t\t\t\tif (groupSliceItem) {\r\n\t\t\t\t\t(<any>groupSliceItem)[series.dataFields.value] = groupValue;\r\n\t\t\t\t\tthis._ignoreDataUpdate = true;\r\n\t\t\t\t\tdataProvider.validateRawData();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet groupData: any = {\r\n\t\t\t\t\t\tsliceGrouperOther: true\r\n\t\t\t\t\t};\r\n\t\t\t\t\tgroupData[series.dataFields.category] = this.groupName;\r\n\t\t\t\t\tgroupData[series.dataFields.value] = groupValue;\r\n\t\t\t\t\tthis._ignoreDataUpdate = true;\r\n\t\t\t\t\tdataProvider.addData(groupData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\r\n\t\tthis._disposers.push(series.events.on(\"validated\", (ev) => {\r\n\t\t\tseries.slices.each((slice) => {\r\n\t\t\t\tif ((<any>slice.dataItem.dataContext).sliceGrouperOther) {\r\n\t\t\t\t\tif (!this.groupSlice) {\r\n\t\t\t\t\t\tthis.groupSlice = slice;\r\n\t\t\t\t\t\tthis.initSlices();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes group slice.\r\n\t */\r\n\tprivate initSlices(): void {\r\n\r\n\t\tif (!this.groupSlice) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Apply custom peroperties\r\n\t\t$object.each(this.groupProperties, (key, val) => {\r\n\t\t\t(<any>this.groupSlice)[key] = val;\r\n\t\t});\r\n\r\n\t\t// Set up click\r\n\t\tif (this.clickBehavior != \"none\") {\r\n\r\n\t\t\tif (!this.groupSlice.events.has(\"hit\", this.toggleGroupOn, this)) {\r\n\t\t\t\tthis._clickDisposers.push(this.groupSlice.events.on(\"hit\", this.toggleGroupOn, this));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles group on.\r\n\t */\r\n\tprivate toggleGroupOn(): void {\r\n\r\n\t\tif (this.clickBehavior == \"none\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._closed = false;\r\n\r\n\t\t// Hide \"Other\" slice\r\n\t\tthis.groupSlice.dataItem.hide();\r\n\t\tif (this.syncLegend) {\r\n\t\t\t(<any>this.groupSlice.dataItem).hiddenInLegend = true;\r\n\t\t}\r\n\r\n\t\tthis._clickDisposers.push(this.groupSlice.events.once(\"shown\", (ev) => {\r\n\t\t\tthis.toggleGroupOff();\r\n\t\t}));\r\n\r\n\t\t// Unhide hidden slices\r\n\t\tthis.smallSlices.each((slice) => {\r\n\t\t\tslice.dataItem.hidden = false;\r\n\t\t\tslice.dataItem.show();\r\n\t\t\tif (this.syncLegend) {\r\n\t\t\t\t(<any>slice.dataItem).hiddenInLegend = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// Maybe hide big slices\r\n\t\tif (this.clickBehavior == \"zoom\") {\r\n\t\t\tthis.bigSlices.each((slice) => {\r\n\t\t\t\tslice.dataItem.hide();\r\n\t\t\t\tif (this.syncLegend) {\r\n\t\t\t\t\t(<any>slice.dataItem).hiddenInLegend = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.syncLegend) {\r\n\t\t\t(<any>this.target.baseSprite).feedLegend();\r\n\t\t}\r\n\r\n\t\t// Show zoomout button\r\n\t\tthis.zoomOutButton.show();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles group off.\r\n\t */\r\n\tprivate toggleGroupOff(): void {\r\n\r\n\t\tif (this.clickBehavior == \"none\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._closed = true;\r\n\r\n\t\t// Toggle \"Other\" slice back on\r\n\t\tthis.groupSlice.events.disableType(\"shown\")\r\n\t\tthis.groupSlice.dataItem.show();\r\n\t\tthis.groupSlice.events.enableType(\"shown\");\r\n\t\tif (this.syncLegend) {\r\n\t\t\t(<any>this.groupSlice.dataItem).hiddenInLegend = false;\r\n\t\t}\r\n\r\n\r\n\t\t// Maybe unhide big slices\r\n\t\tif (this.clickBehavior == \"zoom\") {\r\n\t\t\tthis.bigSlices.each((slice) => {\r\n\t\t\t\tslice.dataItem.hidden = false;\r\n\t\t\t\tslice.dataItem.show();\r\n\t\t\t\tif (this.syncLegend) {\r\n\t\t\t\t\t(<any>slice.dataItem).hiddenInLegend = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Hide small slices\r\n\t\tthis.smallSlices.each((slice) => {\r\n\t\t\tslice.dataItem.hide();\r\n\t\t\tif (this.syncLegend) {\r\n\t\t\t\t(<any>slice.dataItem).hiddenInLegend = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.syncLegend) {\r\n\t\t\t(<any>this.target.baseSprite).feedLegend();\r\n\t\t}\r\n\r\n\t\t// Hide zoomout button\r\n\t\tthis.zoomOutButton.hide();\r\n\t}\r\n\r\n\t/**\r\n\t * Percent threshold which slices to group. If a slice is less than\r\n\t * `threshold` percent, it will be moved into \"Other\" group.\r\n\t *\r\n\t * @default 5\r\n\t * @param  value  Threshold\r\n\t */\r\n\tpublic set threshold(value: number) {\r\n\t\tif (this._threshold != value) {\r\n\t\t\tthis._threshold = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Threshold\r\n\t */\r\n\tpublic get threshold(): number {\r\n\t\treturn this._threshold;\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of ungrouped slices to show. Any slice beyond `limit` will\r\n\t * go into the \"Other\" group.\r\n\t *\r\n\t * NOTE: if `limit` is set, `threshold` setting will be ignored.\r\n\t *\r\n\t * @default undefined\r\n\t * @since 4.9.14\r\n\t * @param  value  Limit\r\n\t */\r\n\tpublic set limit(value: number) {\r\n\t\tif (this._limit != value) {\r\n\t\t\tthis._limit = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Limit\r\n\t */\r\n\tpublic get limit(): number {\r\n\t\treturn this._limit;\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ZoomOutButton]] that is shown when \"Other\" slice is\r\n\t * broken down, to get back to grouped state.\r\n\t *\r\n\t * @param  value  Button\r\n\t */\r\n\tpublic set zoomOutButton(value: ZoomOutButton) {\r\n\t\tthis._zoomOutButton = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Button\r\n\t */\r\n\tpublic get zoomOutButton(): ZoomOutButton {\r\n\t\tif (!this._zoomOutButton) {\r\n\t\t\tconst chart = <PercentChart>this.target.baseSprite;\r\n\t\t\tlet zoomOutButton = chart.tooltipContainer.createChild(ZoomOutButton);\r\n\t\t\tzoomOutButton.shouldClone = false;\r\n\t\t\tzoomOutButton.align = \"right\";\r\n\t\t\tzoomOutButton.valign = \"top\";\r\n\t\t\tzoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n\t\t\tzoomOutButton.marginTop = 5;\r\n\t\t\tzoomOutButton.marginRight = 5;\r\n\r\n\t\t\tzoomOutButton.hide(0);\r\n\t\t\tthis.zoomOutButton = zoomOutButton;\r\n\t\t\tthis._disposers.push(this._zoomOutButton);\r\n\r\n\t\t\tzoomOutButton.events.on(\"hit\", () => {\r\n\t\t\t\tthis.toggleGroupOff();\r\n\t\t\t}, this);\r\n\t\t}\r\n\t\treturn this._zoomOutButton;\r\n\t}\r\n\r\n\t/**\r\n\t * What happens when \"Other\" slice is clicked/tapped:\r\n\t *\r\n\t * * \"none\": nothing (default)\r\n\t * * \"break\": the slice is broken down into actual slices it consists of\r\n\t * * \"zoom\": actual small slices are shown and the rest of the slices are hidden\r\n\t *\r\n\t * @param  value  Click behavior\r\n\t */\r\n\tpublic set clickBehavior(value: \"none\" | \"break\" | \"zoom\") {\r\n\t\tif (this._clickBehavior != value) {\r\n\t\t\tthis._clickBehavior = value;\r\n\t\t\tthis.initSlices();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Click behavior\r\n\t */\r\n\tpublic get clickBehavior(): \"none\" | \"break\" | \"zoom\" {\r\n\t\treturn this._clickBehavior;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the element\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.disposeClickEvents();\r\n\t\tthis.groupSlice = undefined;\r\n\t\tthis.smallSlices.clear();\r\n\t\tthis.bigSlices.clear();\r\n\t\tif (this._dataProvider && $type.isArray(this._dataProvider.data)) {\r\n\t\t\tfor(let i = 0; i < this._dataProvider.data.length; i++) {\r\n\t\t\t\tconst row = this._dataProvider.data[i];\r\n\t\t\t\tif (row.sliceGrouperOther) {\r\n\t\t\t\t\tthis._dataProvider.data.splice(i, 1);\r\n\t\t\t\t\tthis._dataProvider.invalidateData();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tprivate disposeClickEvents(): void {\r\n\t\tconst a = this._clickDisposers;\r\n\t\tthis._clickDisposers = <any>null;\r\n\t\twhile (a.length !== 0) {\r\n\t\t\tconst disposer = a.shift();\r\n\t\t\tdisposer.dispose();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SliceGrouper\"] = SliceGrouper;\r\n"]}