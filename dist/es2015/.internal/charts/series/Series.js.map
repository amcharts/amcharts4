{"version":3,"file":"Series.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/series/Series.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { OrderedList, OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { system } from \"../../core/System\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo review description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic bullets = new Dictionary<string, Bullet>();\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Series}\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t * @type {boolean}\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if the series should be initially hidden.\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\thidden?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to the series name when it is retrieved.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tname: string,\r\n\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\titemReaderText: string\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @type {ISeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IComponentProperties}\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISeriesEvents}\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t *\r\n\t * @type {SeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A name of the Series.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _title: string;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t *\r\n\t * @type {LegendDataItem<Series, ISeriesEvents>}\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t *\r\n\t * @type {ListTemplate<Bullet>}\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t *\r\n\t * @type {SerialChart}\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t *\r\n\t * @type {List<AxisDataItem>}\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, by default we do not do it. In case you use percent for your charts, you must set this to true.\r\n\t * Pie chart, which uses percent sets this to true by default.\r\n\t * @todo review description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from chart's series list.\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {SeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param {this[\"_chart\"]}  value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {this} Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param {Bullet}  bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param {IListEvents<Bullet>[\"inserted\"]}  event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Bullet>[\"inserted\"]) {\r\n\t\tlet bullet: Bullet = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tif (this.itemsFocusable()) {\r\n\t\t\tbullet.focusable = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param {IListEvents<Bullet>[\"inserted\"]}  event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Bullet>[\"removed\"]) {\r\n\t\tlet bullet: Bullet = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param  {string}  key  Key\r\n\t * @return {number}       Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\tif (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t\tstartIndex++;\r\n\t\t}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param {OrderedList<this[\"_dataItem\"]>} dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet count: { [index: string]: number } = {};\r\n\t\tlet sum: { [index: string]: number } = {};\r\n\t\tlet low: { [index: string]: number } = {};\r\n\t\tlet high: { [index: string]: number } = {};\r\n\t\tlet open: { [index: string]: number } = {};\r\n\t\tlet close: { [index: string]: number } = {};\r\n\t\tlet previous: { [index: string]: number } = {};\r\n\t\tlet first: { [index: string]: number } = {};\r\n\r\n\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\tlet startIndex: number = $math.max(0, this._workingStartIndex);\r\n\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\tlet endIndex: number = $math.min(this._workingEndIndex, this.dataItems.length);\r\n\r\n\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\tstartIndex = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tif (startIndex > 0) {\r\n\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t// save previous\r\n\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\tfor (let key in dataItem.values) {\r\n\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t// count values\r\n\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t// sum values\r\n\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t// open\r\n\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// close\r\n\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t// low\r\n\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// high\r\n\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t// previous change\r\n\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t// previous change percent\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t// save previous\r\n\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.calculatePercent) {\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\tlet ksum: number = sum[key];\r\n\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && ksum > 0) {\r\n\r\n\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t// so we do startIndex - 1\r\n\t\tif (startIndex > 0) {\r\n\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t//for (let key in zeroItem.values) {\r\n\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t// change\r\n\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t// change percent\r\n\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t//}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.bulletsContainer.fill = this.fill;\r\n\t\tthis.bulletsContainer.stroke = this.stroke;\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tif (dataItem.index < this.startIndex || dataItem.index >= this.endIndex) {\r\n\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SeriesDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t$iter.each(this.bullets.iterator(), (bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Bullet = <Bullet>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (!bullet) {\r\n\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\tlet readerText = this.itemReaderText || (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\tbullet.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\tbullet.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\tbullet.events.once(\"over\", (ev) => {\r\n\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\tbullet.events.once(\"out\", (ev) => {\r\n\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?:string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param {IListEvents<AxisDataItem>[\"inserted\"]}  event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Axis}    axis  [description]\r\n\t * @return {string}        [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  xPosition  X\r\n\t * @param {number}  yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Bullet]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return {ListTemplate<Bullet>} List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param {boolean} value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif(this.setPropertyValue(\"hiddenInLegend\", value)){\r\n\t\t\tif(this.chart){\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis._title = value;\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.adapter.apply(\"name\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param {string} value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"itemReaderText\", readerText);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param {LegendDataItem<Series, ISeriesEvents>}  value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendDataItem<Series, ISeriesEvents>} Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]}  dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"]) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif (dataItem) {\t\t\t\t\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param {Series}  source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param {Error} e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tthis._chart.modal.content = e.message;\r\n\t\tthis._chart.modal.closable = false;\r\n\t\tthis._chart.modal.open();\r\n\t\tthis._chart.disabled = true;\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = fieldValues.workingValue;\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent = (workingValue - minValue) / (maxValue - minValue);\r\n\r\n\t\t\t\t\t\t\t\t\tif($type.isNumber(workingValue) && !$type.isNumber(percent)){\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n/*\r\n\tprotected getVisibility(): boolean {\r\n\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\tif (hidden) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getVisibility();\r\n\t\t}\r\n\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  a  Element 1\r\n\t * @param  {string}  b  Element 2\r\n\t * @return {Ordering}   Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n"]}