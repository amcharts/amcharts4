{"version":3,"file":"Legend.js","sourceRoot":"","sources":["../../../../src/.internal/charts/Legend.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { EventDispatcher, AMEvent } from \"../core/utils/EventDispatcher\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t *\r\n\t * @type {Label}\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Legend}\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\t\t\tlet itemContainer = this.component.itemContainers.create();\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif (sprite instanceof DataItem || sprite instanceof Sprite) {\r\n\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\tsprite.events.on(\"visibilitychanged\", (ev) => {\r\n\t\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t)\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t * @type {string}\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n *\r\n * @type {string}\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvisible?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @type {LegendPosition}\r\n\t */\r\n\tposition?: LegendPosition\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n * @todo Verify/implement dynamic updating of legend items once the properties of related Series change\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t *\r\n\t * @type {ILegendDataFields}\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ILegendProperties}\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ILegendAdapters}\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILegendEvents}\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t *\r\n\t * @type {LegendDataItem<DataItem, IDataItemEvents>}\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t *\r\n\t * @type {ListTemplate<Container>}\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t *\r\n\t * @type {ListTemplate<Label>}\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t *\r\n\t * @type {ListTemplate<Container>}\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t *\r\n\t * @type {ListTemplate<Label>}\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t *\r\n\t * @type {this[\"_dataItem\"]}\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(10, 0, 10, 0);\r\n\t\titemContainer.margin(0, 10, 0, 0);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"checkbox\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Add click/tap event to toggle item\r\n\t\t// not good to listen to \"toggled\" as we will get to stackoverflow\r\n\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\tthis.toggleDataItem(<this[\"_dataItem\"]>ev.target.dataItem);\r\n\t\t}, this);\r\n\r\n\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t// for keyboard toggling\r\n\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\tthis.focusedItem = <this[\"_dataItem\"]>ev.target.dataItem;\r\n\t\t});\r\n\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\tthis.focusedItem = undefined;\r\n\t\t});\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tthis.toggleDataItem(this.focusedItem);\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\";\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {LegendDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {LegendDataItem} dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.parent = this;\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tif (dataItem.dataContext.createLegendMarker && !this.useDefaultMarker) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataItem.dataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.currentText == \"\" || valueLabel.currentText == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif(legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)){\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\t\tcontainer.isActive = !visible;\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t * \r\n\t * @default \"bottom\"\r\n\t * @param {LegendPosition}  value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 20, 10, 20);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.itemContainers.template.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.width = percent(100);\r\n\t\t\t\tthis.labels.template.truncate = true;\r\n\t\t\t\tthis.labels.template.fullWords = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.itemContainers.template.width = undefined;\r\n\t\t\t\tthis.itemContainers.template.maxWidth = undefined;\r\n\t\t\t\tthis.valueLabels.template.width = 50;\r\n\t\t\t\tthis.labels.template.truncate = false;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendPosition} Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `true` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]} item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Preloader} Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n"]}