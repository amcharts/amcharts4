{"version":3,"file":"ColorizeFilter.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/rendering/filters/ColorizeFilter.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,MAAM,EAAoB,MAAM,UAAU,CAAC;AAGpD,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AA+BzC,CAAC;AAGF;;;;;GAKG;AAEH;;GAEG;AACH;IAAoC,0CAAM;IAwBzC;;OAEG;IACH;QAAA,YACC,iBAAO,SAgBP;QAfA,KAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAElC,kBAAkB;QAClB,sEAAsE;QACtE,2EAA2E;QAC3E,uCAAuC;QACvC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACrD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC9C,uDAAuD;QACvD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QAE/C,yBAAyB;QACzB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAED;;;;;OAKG;IACI,oCAAW,GAAlB;QAEC,IAAI,CAAC,GAAW,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAEf,IAAI,CAAS,CAAC;QACd,IAAI,CAAS,CAAC;QACd,IAAI,CAAS,CAAC;QAEd,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,EAAE;YACvB,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YAC1B,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YAC1B,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SAE1B;aAAM;YACN,CAAC,GAAG,CAAC,CAAC;YACN,CAAC,GAAG,CAAC,CAAC;YACN,CAAC,GAAG,CAAC,CAAC;SACN;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,GAAG,OAAO,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,YAAY,EAAE,CAAC,CAAC;IAChI,CAAC;IAYD,sBAAW,iCAAK;QAKhB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QApBD;;;;;;;;;WASG;aACH,UAAiB,KAA4B;YAC5C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC;;;OAAA;IAoBD,sBAAW,qCAAS;QAKpB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QAClC,CAAC;QArBD;;;;;;;;;;WAUG;aACH,UAAqB,KAAa;YACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC;;;OAAA;IASF,qBAAC;AAAD,CAAC,AA1HD,CAAoC,MAAM,GA0HzC;;AAGD;;;;;GAKG;AACH,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC","sourcesContent":["/**\r\n * Module for \"Colorize\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Colorize\" filter.\r\n */\r\nexport interface ColorizeFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tcolor?: Color;\r\n\r\n\t/**\r\n\t * Intensity. (0-1)\r\n\t *\r\n\t * @default 1\r\n\t * @type {number}\r\n\t */\r\n\tintensity: number;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nexport class ColorizeFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {ColorizeFilterProperties}\r\n\t */\r\n\tpublic _properties!: ColorizeFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link ColorizeFilterProperties]\r\n\t * @type {Dictionary<ColorizeFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<ColorizeFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorizeFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\t//this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.intensity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)applies colors to the already existing filter by modifying filyer's\r\n\t * color matrix element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyFilter(): void {\r\n\r\n\t\tlet i: number = this.intensity;\r\n\t\tlet ii = 1 - i;\r\n\r\n\t\tlet r: number;\r\n\t\tlet g: number;\r\n\t\tlet b: number;\r\n\r\n\t\tconst color = this.color;\r\n\r\n\t\tif (color && color.rgb) {\r\n\t\t\tr = color.rgb.r / 255 * i;\r\n\t\t\tg = color.rgb.g / 255 * i;\r\n\t\t\tb = color.rgb.b / 255 * i;\r\n\r\n\t\t} else {\r\n\t\t\tr = 0;\r\n\t\t\tg = 0;\r\n\t\t\tb = 0;\r\n\t\t}\r\n\r\n\t\tthis.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * Target color to apply to the element.\r\n\t *\r\n\t * Depending on the `intensity`, all colors of the target element will steer\r\n\t * towards this color.\r\n\t *\r\n\t * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"color\"] = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"color\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Intensity of the color (0-1).\r\n\t *\r\n\t * The bigger the number the more of a `color` target's colors will become.\r\n\t *\r\n\t * 0 means the colors will remain as they are.\r\n\t * 1 means all colors will become the target `color`.\r\n\t *\r\n\t * @default 1\r\n\t * @param {number}  value  Intensity (0-1)\r\n\t */\r\n\tpublic set intensity(value: number) {\r\n\t\tthis.properties.intensity = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Intensity (0-1)\r\n\t */\r\n\tpublic get intensity(): number {\r\n\t\treturn this.properties.intensity;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n"]}