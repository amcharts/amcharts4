{"version":3,"file":"Export.js","sourceRoot":"","sources":["../../../../../src/.internal/core/export/Export.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard, KeyboardKeys } from \"../utils/Keyboard\";\r\nimport { Color, color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { StyleRule } from \"../utils/DOM\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n\r\n// TODO better parsing\r\nconst fontFamilySrcRegexp = /src: ([^;]+);/;\r\n\r\n// TODO better checks\r\nfunction supportsBlobUri(): boolean {\r\n\treturn window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// TODO handle abort ?\r\n\t\tconst f = new FileReader();\r\n\t\tf.onload = (e) => { resolve(<string>f.result); };\r\n\t\tf.onerror = (e) => { reject(e); };\r\n\t\tf.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nasync function loadStylesheet<A>(url: string, f: (sheet: CSSStyleSheet) => Promise<A>): Promise<A> {\r\n\tconst response = await $net.load(url);\r\n\r\n\tconst s = document.createElement(\"style\");\r\n\ts.textContent = response.response;\r\n\tdocument.head.appendChild(s);\r\n\r\n\ttry {\r\n\t\treturn await f(<CSSStyleSheet>s.sheet);\r\n\r\n\t} finally {\r\n\t\tdocument.head.removeChild(s);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheet(topUrl: string, sheet: CSSStyleSheet, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tconst promises: Array<Promise<void>> = [];\r\n\r\n\tfor (let i = 0; i < sheet.cssRules.length; i++) {\r\n\t\tconst rule = sheet.cssRules[i];\r\n\r\n\t\tif (rule.type === CSSRule.IMPORT_RULE) {\r\n\t\t\tlet url = (<CSSImportRule>rule).href;\r\n\r\n\t\t\tif (url) {\r\n\t\t\t\turl = $utils.joinUrl(topUrl, url);\r\n\t\t\t\tpromises.push(loadStylesheet(url, (sheet) => eachStylesheet(url, sheet, f)));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tf(topUrl, rule);\r\n\t\t}\r\n\t}\r\n\r\n\tif (promises.length) {\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheets(f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tawait Promise.all($array.map(document.styleSheets, (sheet) => {\r\n\t\tlet url = sheet.href;\r\n\r\n\t\tif (url == null) {\r\n\t\t\treturn eachStylesheet(location.href, <CSSStyleSheet>sheet, f);\r\n\r\n\t\t} else {\r\n\t\t\turl = $utils.joinUrl(location.href, url);\r\n\t\t\treturn loadStylesheet(url, (sheet) => eachStylesheet(url, sheet, f));\r\n\t\t}\r\n\t}));\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Export]].\r\n */\r\nexport type ExportOperation = {\r\n\tformat?: string;\r\n\toptions?: any;\r\n}\r\n\r\n/**\r\n * Defines image formats available for export.\r\n *\r\n * @type {string}\r\n */\r\nexport type imageFormats = \"png\" | \"gif\" | \"jpg\";\r\n\r\n/**\r\n * Represents options for image export.\r\n */\r\nexport interface IExportImageOptions {\r\n\r\n\t/**\r\n\t * Quality of the exported image. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tquality?: number;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @type {number}\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Normally, Export removes \"tainted\" images (images that are loaded from\r\n\t * other host than the chart itself) before export.\r\n\t *\r\n\t * Set this to `true` to disable it.\r\n\t *\r\n\t * Please note that removal of tainted images might trigger cross-origin\r\n\t * security restrictions in browser and prevent the whole export operation,\r\n\t * so use with caution.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tkeepTainted?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for SVG export.\r\n */\r\nexport interface IExportSVGOptions {\r\n}\r\n\r\n/**\r\n * Available PDF page sizes.\r\n *\r\n * @type {string}\r\n */\r\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\r\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\r\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\r\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\r\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\r\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\r\n\r\n/**\r\n * Represents options for PDF export.\r\n */\r\nexport interface IExportPDFOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * Font size to use for all texts.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * An image format to use for embedded images in PDF.\r\n\t *\r\n\t * See `imageFormats` in [[Export_module]].\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\timageFormat?: imageFormats;\r\n\r\n\t/**\r\n\t * Whether to add a URL of the web page the chart has been exported from.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default true\r\n\t */\r\n\taddURL?: boolean;\r\n\r\n\t/**\r\n\t * Page size of the exported PDF.\r\n\t *\r\n\t * See `pageSizes` in [[Export_module]].\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpageSize?: pageSizes;\r\n\r\n\t/**\r\n\t * Page orientation.\r\n\t */\r\n\tpageOrientation?: \"landscape\" | \"portrait\";\r\n\r\n\t/**\r\n\t * Page margins.\r\n\t *\r\n\t * Can be one of the following:\r\n\t *\r\n\t * A single number, in which case it will act as margin setting\r\n\t * for all four edges of the page.\r\n\t *\r\n\t * An array of two numbers `[ horizontal, vertical ]`.\r\n\t *\r\n\t * An array of four numbers `[ left, top, right, bottom ]`.\r\n\t */\r\n\tpageMargins?: number | number[];\r\n\r\n}\r\n\r\n/**\r\n * Represents options for CSV export.\r\n */\r\nexport interface IExportCSVOptions {\r\n\r\n\t/**\r\n\t * Separator string to separate columns with.\r\n\t *\r\n\t * @default \",\"\r\n\t * @type {string}\r\n\t */\r\n\tseparator?: string;\r\n\r\n\t/**\r\n\t * CSV format does not require enclosing values in quotes, unless it\r\n\t * contains strings.\r\n\t *\r\n\t * This setting can be used to enforce enclosing of all values in CSV with\r\n\t * quotes.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tforceQuotes?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Add rows in reverse order.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t * @type {any}\r\n\t */\r\n\temptyAs?: any;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for JSON export\r\n */\r\nexport interface IExportJSONOptions {\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Sets indent size for each hierarchical elements.\r\n\t *\r\n\t * @default \"  \"\r\n\t * @type {number}\r\n\t */\r\n\tindent?: number;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for XLSX export.\r\n */\r\nexport interface IExportExcelOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t * @type {any}\r\n\t */\r\n\temptyAs?: any;\r\n}\r\n\r\n/**\r\n * Represents options for print.\r\n */\r\nexport interface IExportPrintOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * A delay in milliseconds to wait before initiating print.\r\n\t *\r\n\t * This delay is necessary to ensure DOM is prepared and repainted before\r\n\t * print dialog kicks in.\r\n\t *\r\n\t * @default 500\r\n\t * @type {number}\r\n\t */\r\n\tdelay?: number;\r\n\r\n\t/**\r\n\t * Method to use for printing.\r\n\t *\r\n\t * If one fails for your particular setup, try the other.\r\n\t *\r\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\r\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\r\n\t *\r\n\t * @default \"iframe\"\r\n\t */\r\n\tprintMethod?: \"css\" | \"iframe\";\r\n\r\n}\r\n\r\n/**\r\n * Represents options for custom menu items.\r\n */\r\nexport interface IExportCustomOptions {\r\n\r\n\t/**\r\n\t * A callback function reference that will be called when this custom item\r\n\t * is clicked.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tcallback?: (branch?: any) => any;\r\n\r\n}\r\n\r\n/**\r\n * Represents interface for a temporarily removed image.\r\n */\r\nexport interface IExportRemovedObject {\r\n\r\n\t/**\r\n\t * Element that was removed out of DOM.\r\n\t *\r\n\t * @type {Node}\r\n\t */\r\n\telement: Node;\r\n\r\n\t/**\r\n\t * A placeholder element that was placed instead of removed element so that\r\n\t * we know where to put removed element back in.\r\n\t *\r\n\t * @type {Node}\r\n\t */\r\n\tplaceholder: Node;\r\n\r\n}\r\n\r\n/**\r\n * Represents all available options for all export operations.\r\n */\r\nexport interface IExportOptions {\r\n\tpng: IExportImageOptions;\r\n\tgif: IExportImageOptions;\r\n\tjpg: IExportImageOptions;\r\n\tsvg: IExportSVGOptions;\r\n\tpdf: IExportPDFOptions;\r\n\txlsx: IExportExcelOptions;\r\n\tcsv: IExportCSVOptions;\r\n\tjson: IExportJSONOptions;\r\n\tprint: IExportPrintOptions;\r\n\tcustom: IExportCustomOptions;\r\n}\r\n\r\n/**\r\n * All export options as a type.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport type ExportOptions = IExportImageOptions | IExportSVGOptions | IExportPDFOptions | IExportExcelOptions | IExportCSVOptions | IExportJSONOptions | IExportPrintOptions;\r\n\r\n/**\r\n * Defines events for export operations.\r\n */\r\nexport interface IExportEvents {\r\n\r\n\t/**\r\n\t * Invoked when Export initializes.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when Export menu is created.\r\n\t */\r\n\tmenucreated: {};\r\n\r\n\t/**\r\n\t * Invoked when the Export starts export procedure.\r\n\t *\r\n\t * You can use event handlers here to modify config before actual export\r\n\t * starts.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texportstarted: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation finishes.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texportfinished: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation encounters error.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\terror: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation times out.\r\n\t *\r\n\t * Use Export's `timeoutDelay` setting to set timeout. (default: 2000ms)\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texporttimedout: ExportOperation;\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport type Keys = keyof IExportOptions;\r\n\r\n/**\r\n * Represents a list of available adapters for [[Export]].\r\n */\r\nexport interface IExportAdapters {\r\n\r\n\tsupported: {\r\n\t\tsupported: boolean,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\texportFunction: {\r\n\t\tfunc: (type: Keys, options?: IExportOptions[Keys]) => Promise<any>,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\toptions: {\r\n\t\toptions: IExportOptions[Keys],\r\n\t\ttype?: Keys\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttitle: $type.Optional<string>,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcharset: {\r\n\t\tcharset: string,\r\n\t\ttype?: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t}\r\n\r\n\tsvgToDataURI: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tnormalizeSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetCSV: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetJSON: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetExcel: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeDocument: {\r\n\t\tdoc: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tcontainer: HTMLElement\r\n\t},\r\n\r\n\tsprite: {\r\n\t\tsprite: Sprite\r\n\t},\r\n\r\n\tdata: {\r\n\t\tdata: Array<any>\r\n\t},\r\n\r\n\tdataFields: {\r\n\t\tdataFields: any\r\n\t},\r\n\r\n\tdateFormatter: {\r\n\t\tdateFormatter: DateFormatter\r\n\t},\r\n\r\n\tdateFormat: {\r\n\t\tdateFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tdateFields: {\r\n\t\tdateFields: any\r\n\t},\r\n\r\n\tdataFieldName: {\r\n\t\tname: string,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDateField: {\r\n\t\tisDateField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tcontentType: {\r\n\t\tcontentType: string,\r\n\t\ttype: Keys\r\n\t},\r\n\r\n\tfilePrefix: {\r\n\t\tfilePrefix: string\r\n\t},\r\n\r\n\tbackgroundColor: {\r\n\t\tbackgroundColor: $type.Optional<Color>\r\n\t},\r\n\r\n\ttimeoutMessage: {\r\n\t\tmessage: string\r\n\t},\r\n\r\n\txlsxWorkbookOptions: {\r\n\t\toptions: any\r\n\t},\r\n\r\n\txlsxSheetName: {\r\n\t\tname: string\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nexport class Export extends Validatable {\r\n\r\n\t/**\r\n\t * XLINK namespace definition.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tstatic XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IExportEvents}\r\n\t */\r\n\tpublic _events!: IExportEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IExportAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Export, IExportAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<Export, IExportAdapters>(this);\r\n\r\n\t/**\r\n\t * Holds options for each format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, ExportOptions>}\r\n\t */\r\n\tprivate _formatOptions: Dictionary<string, ExportOptions> = new Dictionary<string, ExportOptions>();\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Language}\r\n\t */\r\n\tprotected _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<ExportMenu>}\r\n\t */\r\n\tprotected _menu: $type.Optional<ExportMenu>;\r\n\r\n\t/**\r\n\t * Reference to main container to place menu in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * [[Sprite]] instance to be used when converting to image.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Data storage to be used when exporting to data formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {any}\r\n\t */\r\n\tprotected _data: any;\r\n\r\n\t/**\r\n\t * Holds an object of field key / field name used to name columns when\r\n\t * exporting to data formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {any}\r\n\t */\r\n\tprotected _dataFields: any;\r\n\r\n\t/**\r\n\t * A reference to [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<DateFormatter>}\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * A Date format to be used when formatting dates in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<string>}\r\n\t */\r\n\tprotected _dateFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold date values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<List<string>>}\r\n\t */\r\n\tprotected _dateFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * Holds a list of objects that were temporarily removed from the DOM while\r\n\t * exporting. Those most probably are tainted images, or foreign objects that\r\n\t * would otherwise prevent SVG to be converted to canvas.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<IExportRemovedObject>}\r\n\t */\r\n\tprotected _removedObjects: List<IExportRemovedObject> = new List<IExportRemovedObject>();\r\n\r\n\t/**\r\n\t * Holds references to the objects that were temporarily hidden when export\r\n\t * started, so that we can reveal them back when export ends.\r\n\t * \r\n\t * @type {Sprite[]}\r\n\t */\r\n\tprotected _hiddenObjects: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Exported files will be prefixed with whatever it is set here.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _filePrefix: string = \"amCharts\";\r\n\r\n\t/**\r\n\t * Export will try to determine proper background color itself. If you want to\r\n\t * override it and use some other color, set this property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Color>}\r\n\t */\r\n\tprotected _backgroundColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * A title to use for some document exports, mainly for print.\r\n\t * A document.title will be used if not set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<string>}\r\n\t */\r\n\tprotected _title: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If you are using web fonts (such as Google Fonts), your chart might be\r\n\t * using them as well.\r\n\t *\r\n\t * Normally, exporting to image will require to download these fonts so the\r\n\t * are carried over to exported image.\r\n\t *\r\n\t * This setting can be used to disable or enable this functionality.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic useWebFonts: boolean = true;\r\n\r\n\t/**\r\n\t * Many modern displays have use more actual pixels per displayed pixel. This\r\n\t * results in sharper images on screen. Unfortunately, when exported to a\r\n\t * bitmap image of the sam width/height size it will lose those extra pixels,\r\n\t * resulting in somewhat blurry image.\r\n\t *\r\n\t * This is why we are going to export images larger than they are, so that we\r\n\t * don't lose any details.\r\n\t *\r\n\t * If you'd rather export images without change in size, set this to `false`.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic useRetina: boolean = true;\r\n\r\n\t/**\r\n\t * If export operation takes longer than milliseconds in this second, we will\r\n\t * show a modal saying export operation took longer than expected.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic timeoutDelay: number = 2000;\r\n\r\n\t/**\r\n\t * A reference to export timeout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _timeoutTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Modal]] instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Modal>}\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t *\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(container: HTMLElement) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.className = \"Export\";\r\n\r\n\t\t// Set default options\r\n\t\tthis._formatOptions.setKey(\"png\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"jpg\", {\r\n\t\t\tquality: 0.8\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"gif\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"svg\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdf\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\taddURL: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"json\", {\r\n\t\t\tindent: 2,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"csv\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"xlsx\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\tuseLocale: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"print\", {\r\n\t\t\tdelay: 500,\r\n\t\t\tprintMethod: \"iframe\"\r\n\t\t});\r\n\r\n\t\t// Add options adapter\r\n\t\tthis.adapter.add(\"options\", (arg) => {\r\n\t\t\tlet formatOptions = this._formatOptions.getKey(arg.type);\r\n\t\t\tif (arg.options) {\r\n\t\t\t\targ.options = $object.merge(arg.options, formatOptions);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\targ.options = formatOptions;\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.dispatchImmediately(\"inited\");\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * To add an export menu to a chart, set this to a new instance of\r\n\t * [[ExportMenu]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     \"menu\": {}\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Optional<ExportMenu>}  menu  ExportMenu instance\r\n\t */\r\n\tpublic set menu(menu: $type.Optional<ExportMenu>) {\r\n\t\tif (this._menu) {\r\n\t\t\tthis.removeDispose(this._menu);\r\n\t\t}\r\n\t\tthis._menu = menu;\r\n\r\n\t\t// Set container and language\r\n\t\tthis._menu.container = this.container;\r\n\t\tthis._menu.language = this._language;\r\n\r\n\t\t// Add adapter to check for browser support\r\n\t\tthis._menu.adapter.add(\"branch\", (arg) => {\r\n\t\t\targ.branch.unsupported = !this.typeSupported(arg.branch.type);\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add click events\r\n\t\tthis._menu.events.on(\"hit\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"enter\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"over\", (ev) => {\r\n\t\t\tthis._disablePointers();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"out\", (ev) => {\r\n\t\t\tthis._releasePointers();\r\n\t\t});\r\n\r\n\t\t// Dispatch event\r\n\t\tthis.dispatchImmediately(\"menucreated\");\r\n\r\n\t\t// Prefix with Sprite's class name\r\n\t\tthis._menu.adapter.add(\"classPrefix\", (obj) => {\r\n\t\t\tobj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\t// Add menu to disposers so that it's destroyed when Export is disposed\r\n\t\tthis._disposers.push(this._menu);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<ExportMenu>} ExportMenu instance\r\n\t */\r\n\tpublic get menu(): $type.Optional<ExportMenu> {\r\n\t\treturn this._menu;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this specific menu item type is supported by current system.\r\n\t *\r\n\t * @param  {string}   type  Menu item type\r\n\t * @return {boolean}        `false` if not supported\r\n\t */\r\n\tpublic typeSupported<Key extends keyof IExportOptions>(type: Key): boolean {\r\n\t\tlet supported = true;\r\n\t\tif (type === \"pdf\") {\r\n\t\t\tsupported = this.downloadSupport();\r\n\t\t}\r\n\t\telse if (type === \"xlsx\") {\r\n\t\t\tsupported = (this.downloadSupport() && this.data) ? true : false;\r\n\t\t}\r\n\t\telse if (type == \"print\" && !(<any>window).print) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if ([\"json\", \"csv\"].indexOf(type) !== -1 && !this.data) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"supported\", {\r\n\t\t\tsupported: supported,\r\n\t\t\ttype: type\r\n\t\t}).supported;\r\n\t}\r\n\r\n\t/**\r\n\t * Get function to handle export for particular format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {this}\r\n\t */\r\n\tprivate _getFunction<Key extends keyof IExportOptions>(type: Key): (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\treturn <any>this.getImage;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\treturn <any>this.getSVG;\r\n\t\t\tcase \"pdf\":\r\n\t\t\t\treturn <any>this.getPDF;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\treturn <any>this.getExcel;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\treturn <any>this.getCSV;\r\n\t\t\tcase \"json\":\r\n\t\t\t\treturn <any>this.getJSON;\r\n\t\t\tcase \"print\":\r\n\t\t\t\treturn this.getPrint;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.unsupported;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates export procedure.\r\n\t *\r\n\t * @param  {string}   type     Export type\r\n\t * @param  {Object}   options  Options\r\n\t * @return {boolean}           `true` if export was successful\r\n\t * @async\r\n\t */\r\n\tpublic async export<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<boolean> {\r\n\r\n\t\t// Dispatch event\r\n\t\tif (this.events.isEnabled(\"exportstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportstarted\"] = {\r\n\t\t\t\t\"type\": \"exportstarted\",\r\n\t\t\t\t\"target\": this,\r\n\t\t\t\t\"format\": type,\r\n\t\t\t\t\"options\": options\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"exportstarted\", event);\r\n\t\t}\r\n\r\n\t\t// Check if it's a custom item, and do nothing or execute custom callback\r\n\t\tif (type == \"custom\") {\r\n\t\t\tthis.handleCustom(<IExportCustomOptions>options);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Schedule a preloader\r\n\t\tthis.showPreloader()\r\n\r\n\t\t// Schedule a timeout\r\n\t\tif (this.timeoutDelay) {\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tthis._timeoutTimeout = this.setTimeout((): void => {\r\n\r\n\t\t\t\t// Dispatch event\r\n\t\t\t\tif (this.events.isEnabled(\"exporttimedout\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exporttimedout\"] = {\r\n\t\t\t\t\t\t\"type\": \"exporttimedout\",\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\t\"options\": options\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"exporttimedout\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show modal\r\n\t\t\t\tthis.showTimeout()\r\n\r\n\t\t\t}, this.timeoutDelay);\r\n\t\t}\r\n\r\n\t\t// Hide items that should not be exported\r\n\t\tthis.hideNonExportableSprites();\r\n\r\n\t\t// Get the actual export function\r\n\t\tlet func: (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> = this._getFunction(type);\r\n\r\n\t\t// Give chance for plugins to override both function and options\r\n\t\toptions = this.adapter.apply(\"options\", {\r\n\t\t\toptions: options,\r\n\t\t\ttype: type\r\n\t\t}).options;\r\n\r\n\r\n\t\tfunc = this.adapter.apply(\"exportFunction\", {\r\n\t\t\tfunc: func,\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).func;\r\n\r\n\t\t// Get exported stuff\r\n\t\tlet data = await func.call(this, type, options);\r\n\r\n\t\t// Restore temporarily hidden elements\r\n\t\tthis.restoreNonExportableSprites();\r\n\r\n\t\tif (data) {\r\n\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"exportfinished\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportfinished\"] = {\r\n\t\t\t\t\t\"type\": \"exportfinished\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"exportfinished\", event);\r\n\t\t\t}\r\n\r\n\t\t\t// Hide preloader and timeout modals\r\n\t\t\tthis.hidePreloader();\r\n\t\t\tthis.hideTimeout();\r\n\r\n\t\t\t// Download or print\r\n\t\t\tif (type === \"print\") {\r\n\t\t\t\treturn this.print(data, <IExportOptions[\"print\"]>options, this.adapter.apply(\"title\", {\r\n\t\t\t\t\ttitle: this.title,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t}).title);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.download(data, this.filePrefix + \".\" + type);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Throw exception?\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"error\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"error\"] = {\r\n\t\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"error\", event);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A function that should handle unsupported export types.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}              type     Export type\r\n\t * @param  {IExportImageOptions} options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t * @async\r\n\t */\r\n\tpublic async unsupported<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<string> {\r\n\t\t// TODO should this return `undefined`?\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on a \"custom\" menu item.\r\n\t *\r\n\t * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportCustomOptions}  options  Options\r\n\t */\r\n\tpublic handleCustom(options: IExportCustomOptions): void {\r\n\t\tif ($type.hasValue(options.callback)) {\r\n\t\t\toptions.callback.call(this, options);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests a Print of the chart.\r\n\t *\r\n\t * @param  {string}               type     Export type\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPrint(type: string, options?: IExportPrintOptions): Promise<string> {\r\n\t\treturn this.getImage(\"png\", options);\r\n\t}\r\n\r\n\t/**\r\n\t * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<string>} String which can be embedded directly into a <style> element.\r\n\t * @async\r\n\t */\r\n\tpublic async getFontFamilies(): Promise<{ blobs: Array<string>, cssText: string }> {\r\n\t\tconst DOMURL = this.getDOMURL();\r\n\r\n\t\tconst blobs: Array<string> = [];\r\n\t\tconst promises: Array<Promise<string>> = [];\r\n\r\n\t\tawait eachStylesheets((topUrl, rule) => {\r\n\t\t\tif (rule.type === CSSRule.FONT_FACE_RULE) {\r\n\t\t\t\tconst cssText = rule.cssText;\r\n\r\n\t\t\t\t// TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n\t\t\t\tconst src = fontFamilySrcRegexp.exec(cssText);\r\n\r\n\t\t\t\tif (src !== null) {\r\n\t\t\t\t\t// TODO make this faster (don't create Promises for non-url stuff)\r\n\t\t\t\t\tconst urls: Array<Promise<string | null>> = src[1].split(/ *, */).map(async (url) => {\r\n\t\t\t\t\t\t// TODO better parsing for this\r\n\t\t\t\t\t\t// TODO is it necessary to handle ' ?\r\n\t\t\t\t\t\tconst a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n\r\n\t\t\t\t\t\tif (a === null) {\r\n\t\t\t\t\t\t\treturn url;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst after = a[2];\r\n\r\n\t\t\t\t\t\t\tconst fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// Fetch the actual font-file (.woff)\r\n\t\t\t\t\t\t\t\tconst response = await $net.load(fullUrl, undefined, { responseType: \"blob\" });\r\n\r\n\t\t\t\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\t\t\t\t// We need blob for IE and Edge\r\n\t\t\t\t\t\t\t\tif (supportsBlobUri()) {\r\n\t\t\t\t\t\t\t\t\turl = DOMURL.createObjectURL(response.blob);\r\n\t\t\t\t\t\t\t\t\tblobs.push(url);\r\n\r\n\t\t\t\t\t\t\t\t\t// We need a data URI for Firefox and Chrome\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\turl = await blobToDataUri(response.blob);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// TODO should it should escape the URI ?\r\n\t\t\t\t\t\t\t\treturn \"url(\\\"\" + url + \"\\\")\" + after;\r\n\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Failed to load font\", fullUrl, e);\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(Promise.all(urls).then((a) => {\r\n\t\t\t\t\t\ta = a.filter((x) => x != null);\r\n\r\n\t\t\t\t\t\tif (a.length === 0) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn cssText.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst a = await Promise.all(promises);\r\n\r\n\t\treturn {\r\n\t\t\tblobs: blobs,\r\n\t\t\tcssText: a.filter((x) => !!x).join(\"\\n\")\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Produces image output from the element.\r\n\t *\r\n\t * Converts to a `Canvas` first, then produces an image to download.\r\n\t *\r\n\t * This is an asynchronous function. Rather than returning a result, it\r\n\t * returns a Promise.\r\n\t *\r\n\t * You can use `await` notion from other async functions, or `then()`\r\n\t * anywhere else.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Async\r\n\t * let img = await chart.exporting.getImage( \"PNG\" );\r\n\t *\r\n\t * // Sync\r\n\t * let img;\r\n\t * chart.exporting.getImage( \"PNG\" ).then( ( data ) => {\r\n\t *   img = exporing;\r\n\t * } );\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var img;\r\n\t * chart.exporting.getImage( \"PNG\" ).then( ( data ) => {\r\n\t *   var = data;\r\n\t * } );\r\n\t * ```\r\n\t *\r\n\t * @param  {string}               type     Image format\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t */\r\n\tpublic async getImage<Key extends imageFormats>(type: Key, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Are we using simplified export option?\r\n\t\tif (await this.simplifiedImageExport()) {\r\n\r\n\t\t\t// Get background\r\n\t\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t\t// Get DOM URL\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet url: string | null = null;\r\n\t\t\tlet blobs: Array<string> | null = null;\r\n\r\n\t\t\t// Create temporary image element\r\n\t\t\ttry {\r\n\t\t\t\t/**\r\n\t\t\t\t * Simplified version using `createObjectURL`\r\n\t\t\t\t * Not supported in older browsers\r\n\t\t\t\t */\r\n\r\n\t\t\t\t// Get dimensions\r\n\t\t\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t\t\t// Create canvas and its 2D context\r\n\t\t\t\tvar canvas = this.getDisposableCanvas();\r\n\r\n\t\t\t\t// Set canvas width/height\r\n\t\t\t\tlet pixelRatio = this.getPixelRatio();\r\n\t\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\t\tcanvas.style.height = height + 'px';\r\n\t\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\t\tcanvas.height = height * pixelRatio;\r\n\r\n\t\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\r\n\t\t\t\tif (pixelRatio != 1) {\r\n\t\t\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add background if necessary\r\n\t\t\t\tif (background) {\r\n\t\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\t\tctx.fillRect(0, 0, width, height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\t\t\tif (this.useWebFonts) {\r\n\t\t\t\t\t// TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n\t\t\t\t\tpromises.push(this.getFontFamilies().then((fonts) => {\r\n\t\t\t\t\t\tblobs = fonts.blobs;\r\n\t\t\t\t\t\treturn fonts.cssText;\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpromises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n\t\t\t\tpromises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n\r\n\t\t\t\t// Do prepareations on a document\r\n\t\t\t\tlet a = await Promise.all(promises);\r\n\r\n\t\t\t\t// Get SVG representation of the Sprite\r\n\t\t\t\tlet data = this.normalizeSVG(\r\n\t\t\t\t\t\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tfont,\r\n\t\t\t\t\tfontSize\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Get Blob representation of SVG and create object URL\r\n\t\t\t\tlet svg = new Blob([data], { type: \"image/svg+xml\" });\r\n\t\t\t\turl = DOMURL.createObjectURL(svg);\r\n\r\n\t\t\t\tlet img = await this.loadNewImage(url, width, height, \"anonymous\");\r\n\r\n\t\t\t\t// Draw image on canvas\r\n\t\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t\t\t// Options are set?\r\n\t\t\t\tif (!$type.hasValue(options)) {\r\n\t\t\t\t\toptions = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert to data uri\r\n\t\t\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t\t\t// Get rid of the canvas\r\n\t\t\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\t\t\treturn uri;\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// An error occurred, let's try advanced method\r\n\t\t\t\treturn await this.getImageAdvanced(type, options);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tif (url !== null) {\r\n\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (blobs !== null) {\r\n\t\t\t\t\t$array.each(blobs, (url) => {\r\n\t\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Restore replaced tainted images in DOM\r\n\t\t\t\tthis.restoreRemovedObjects();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Going the hard way. Converting to canvas from each node\r\n\t\t\t */\r\n\t\t\treturn await this.getImageAdvanced(type, options);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n\t * export an image using its functions.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               type     Image format\r\n\t * @param {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}              Data uri\r\n\t */\r\n\tpublic async getImageAdvanced(type: imageFormats, options?: IExportImageOptions): Promise<string> {\r\n\t\t//console.warn(\"Falling back to canvg for exporting\");\r\n\r\n\t\t// Convert external images to data uris\r\n\t\tawait this.imagesToDataURI(this.sprite.dom, options);\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get canvg\r\n\t\tlet canvg = await this.canvg;\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t// Get SVG representation of the Sprite\r\n\t\tlet data = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tfont,\r\n\t\t\tfontSize,\r\n\t\t\tbackground\r\n\t\t);\r\n\r\n\t\t// Create canvas and its 2D context\r\n\t\tvar canvas = this.getDisposableCanvas();\r\n\r\n\t\t// Set canvas width/height\r\n\t\tlet pixelRatio = this.getPixelRatio();\r\n\t\tcanvas.style.width = (width * pixelRatio) + 'px';\r\n\t\tcanvas.style.height = (height * pixelRatio) + 'px';\r\n\t\tcanvas.width = width * pixelRatio;\r\n\t\tcanvas.height = height * pixelRatio;\r\n\r\n\t\tlet config: any = {\r\n\t\t\t//ignoreDimensions: true,\r\n\t\t\tuseCORS: true\r\n\t\t};\r\n\r\n\t\tif (pixelRatio != 1) {\r\n\t\t\tconfig.ignoreDimensions = true;\r\n\t\t\tconfig.scaleWidth = width * pixelRatio;\r\n\t\t\tconfig.scaleHeight = height * pixelRatio;\r\n\t\t}\r\n\r\n\t\tvar res = canvg(canvas, data, config);\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t// Convert canvas to data url\r\n\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t// Get rid of the canvas\r\n\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `<canvas>` element and returns it.\r\n\t *\r\n\t * @return {HTMLCanvasElement} Canvas element\r\n\t */\r\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\r\n\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"fixed\";\r\n\t\tcanvas.style.top = \"-10000px\";\r\n\t\tdocument.body.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes canvas.\r\n\t *\r\n\t * @param {HTMLCanvasElement}  canvas  Canvas element\r\n\t */\r\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\r\n\t\tdocument.body.removeChild(canvas);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel ratio for retina displays.\r\n\t *\r\n\t * @return {number} Pixel ratio\r\n\t */\r\n\tprotected getPixelRatio(): number {\r\n\t\treturn this.useRetina ? $utils.getPixelRatio() : 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all `<image>` tags in SVG to use data uris instead of external\r\n\t * URLs\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {SVGSVGElement}        el       SVG node\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<void>}                 Promise\r\n\t */\r\n\tpublic async imagesToDataURI(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all images\r\n\t\tlet images = el.querySelectorAll(\"image\");\r\n\t\tif (images.length) {\r\n\r\n\t\t\t// Init promises\r\n\t\t\tlet promises = [];\r\n\r\n\t\t\t// There are images, process each of them\r\n\t\t\tfor (let count = images.length, i = 0; i < count; i++) {\r\n\r\n\t\t\t\t// Get image and its href\r\n\t\t\t\tlet image = images[i];\r\n\t\t\t\tlet href = image.getAttributeNS(Export.XLINK, \"href\");\r\n\t\t\t\t//let href = image.getAttribute(\"href\");\r\n\r\n\t\t\t\tif (href.indexOf(\"data:image\") !== -1) {\r\n\t\t\t\t\t// Ignore image if it's already in Data URI format\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// SVG or bitmap image?\r\n\t\t\t\t\tif (href.indexOf(\".svg\") !== -1) {\r\n\t\t\t\t\t\tpromises.push(this.svgToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpromises.push(this.imageToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * `foreignObject` elements cannot be exported. This function hides them\r\n\t * temprarily. In the future it might try to convert them to SVG to make them\r\n\t * exportable.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {SVGSVGElement}        el       SVG node\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<void>}                 Promise\r\n\t */\r\n\tpublic async prepForeignObjects(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all foreign objects\r\n\t\tlet objects = el.querySelectorAll(\"foreignObject\");\r\n\t\tif (objects.length) {\r\n\r\n\t\t\t// There are foreign objects, process each of them\r\n\t\t\tfor (let count = objects.length, i = 0; i < count; i++) {\r\n\t\t\t\tthis.temporarilyRemoveObject(objects[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n\t * external file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SVGImageElement}     el       SVG element\r\n\t * @param {IExportImageOptions} options  Options\r\n\t */\r\n\tpublic async imageToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Create a new image and set its `crossOrigin`. This might not work on some\r\n\t\t// browsers. We'll deal with it if error occurs\r\n\t\tlet img: HTMLImageElement;\r\n\t\ttry {\r\n\r\n\t\t\t// Create image\r\n\t\t\timg = await this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\");\r\n\r\n\t\t\t// Create new canvas\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\t// Draw new image on it via `toDataURL`\r\n\t\t\tcanvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n\r\n\t\t\t// Replace image `href` with data uri\r\n\t\t\t// If we got to this point it means image has loaded, however we might\r\n\t\t\t// still get an error with `toDataURL()`\r\n\t\t\ttry {\r\n\t\t\t\tlet uri = canvas.toDataURL();\r\n\t\t\t\tel.setAttribute(\"href\", uri);\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// Give up and temporarily remove the element href temporarily\r\n\t\t\t\tif (options.keepTainted !== false) {\r\n\t\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (e) {\r\n\r\n\t\t\t// Give up and temporarily remove the element's href\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n\t * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SVGImageElement}     el        An SVG element\r\n\t * @param {IExportImageOptions} options   Options\r\n\t */\r\n\tpublic async svgToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\t\tlet href = el.getAttributeNS(Export.XLINK, \"href\");\r\n\t\ttry {\r\n\t\t\tlet data = await $net.load(href);\r\n\t\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\t\tcharset: \"base64\",\r\n\t\t\t\ttype: \"svg\",\r\n\t\t\t\toptions: options\r\n\t\t\t}).charset;\r\n\r\n\t\t\tlet uri = this.adapter.apply(\"svgToDataURI\", {\r\n\t\t\t\tdata: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n\t\t\t\toptions: options\r\n\t\t\t}).data;\r\n\r\n\t\t\tel.setAttributeNS(Export.XLINK, \"href\", uri);\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// Disable temporarily\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": href\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily removes element from DOM, and replaces it with a dummy\r\n\t * placeholder, as well as stores it for later restoration.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Node} el Node\r\n\t */\r\n\tpublic temporarilyRemoveObject(el: Node, placeholder?: SVGSVGElement): void {\r\n\r\n\t\t// Get parent\r\n\t\tlet parent = el.parentElement || el.parentNode;\r\n\r\n\t\t// Create a placeholder group element if it has not been passed in\r\n\t\tif (!placeholder) {\r\n\t\t\tplaceholder = this.sprite.paper.add(\"g\").node;\r\n\t\t}\r\n\t\tparent.insertBefore(placeholder, el);\r\n\r\n\t\t// Check if we have a textContents we can replace with\r\n\t\t// @todo Perhaps we should explore alternatives to creating text nodes\r\n\t\t// i.e. creating a text version of the HTML-based Text, just for export\r\n\t\t// purposes. Converting HTML into SVG is very complicated\r\n\t\tif (el.textContent) {\r\n\t\t\t/*let text = this.sprite.paper.add(\"text\").node;\r\n\t\t\ttext.textContent = el.textContent;\r\n\t\t\tplaceholder.appendChild(text);\r\n\r\n\t\t\t// Copy properties from the removing element to the placeholder\r\n\t\t\t$dom.copyAttributes(el, placeholder);*/\r\n\t\t}\r\n\r\n\t\t// Remove the old element\r\n\t\tparent.removeChild(el);\r\n\r\n\t\t// Log removed item\r\n\t\tthis._removedObjects.push({\r\n\t\t\t\"element\": el,\r\n\t\t\t\"placeholder\": placeholder\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores all (possibly tainted or unsupported) objects that were\r\n\t * temporarily removed when exporting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic restoreRemovedObjects(): void {\r\n\t\tlet obj: IExportRemovedObject;\r\n\t\twhile (obj = this._removedObjects.pop()) {\r\n\t\t\t//obj.element.setAttribute(\"href\", obj.originalHref);\r\n\t\t\tlet parent = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n\t\t\tparent.insertBefore(obj.element, obj.placeholder);\r\n\t\t\t//parent.removeChild(obj.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n\t * document does not contain any external images.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} `true` if simplified export can be used\r\n\t */\r\n\tpublic async simplifiedImageExport(): Promise<boolean> {\r\n\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"simplifiedImageExport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\r\n\t\t// Try generating a small SVG-embedded canvas\r\n\t\t// If exception occurs, simplified method is not supported\r\n\t\ttry {\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = 1;\r\n\t\t\tcanvas.height = 1;\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n\t\t\tlet url = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img = await this.loadNewImage(url, 1, 1);\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\ttry {\r\n\t\t\t\t//let uri = canvas.toDataURL(\"image/png\");\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", true);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}                     url          URL of the image\r\n\t * @param  {number}                     width        Width (px)\r\n\t * @param  {number}                     height       Height (px)\r\n\t * @param  {string}                     crossOrigin  Cross-Origin setting\r\n\t * @return {Promise<HTMLImageElement>}               Promise\r\n\t */\r\n\tpublic loadNewImage(url: string, width?: number, height?: number, crossOrigin?: string): Promise<HTMLImageElement> {\r\n\t\treturn new Promise((success, error) => {\r\n\r\n\t\t\t// New image\r\n\t\t\tlet image: HTMLImageElement;\r\n\t\t\tif (width && height) {\r\n\t\t\t\timage = new Image(width, height);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\timage = new Image();\r\n\t\t\t}\r\n\r\n\t\t\t// Set crossorigin\r\n\t\t\tif (crossOrigin) {\r\n\t\t\t\timage.setAttribute(\"crossOrigin\", crossOrigin);\r\n\t\t\t}\r\n\r\n\t\t\t// Report success on load\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tsuccess(image);\r\n\t\t\t};\r\n\r\n\t\t\tfunction onerror() {\r\n\r\n\t\t\t\t// Error occurred. Just in case it's the crossOrigin issue, let's try\r\n\t\t\t\t// stripping off this attribute and trying again\r\n\t\t\t\tif (crossOrigin) {\r\n\r\n\t\t\t\t\t// Retain old uri\r\n\t\t\t\t\tlet currentHref = image.src;\r\n\r\n\t\t\t\t\t// Set up another `onerror` to handle situations where image is not\r\n\t\t\t\t\t// loadable at all (i.e. protected by CORS)\r\n\t\t\t\t\timage.onerror = () => {\r\n\t\t\t\t\t\t// Nope, no luck\r\n\t\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// remove the `crossOrigin` attribute\r\n\t\t\t\t\timage.removeAttribute(\"crossorigin\");\r\n\r\n\t\t\t\t\t// retry\r\n\t\t\t\t\timage.src = \"\";\r\n\t\t\t\t\timage.src = currentHref;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set image error handlers\r\n\t\t\timage.onabort = onerror;\r\n\t\t\timage.onerror = onerror;\r\n\r\n\t\t\t// Trigger load\r\n\t\t\timage.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current DOM URL.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {any} URL\r\n\t */\r\n\tpublic getDOMURL(): any {\r\n\t\treturn self.URL || (<any>self).webkitURL || self;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG representation of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportSVGOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t */\r\n\tpublic async getSVG(type: \"svg\", options?: IExportSVGOptions): Promise<string> {\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t// Get SVG\r\n\t\tlet svg = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tfont,\r\n\t\t\tfontSize\r\n\t\t);\r\n\t\t// Prep data URI\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: \"svg\",\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getSVG\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n\t * necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}             svg       Input SVG\r\n\t * @param  {IExportSVGOptions}  options   Options\r\n\t * @param  {number}             width     Width of the SVG viewport\r\n\t * @param  {number}             height    Height of the SVG viewport\r\n\t * @param  {string}             font      Font family to use as a base\r\n\t * @param  {string}             fontSize  Font size to use as a base\r\n\t * @return {string}                       Output SVG\r\n\t * @todo Add style params to existing <svg>\r\n\t */\r\n\tpublic normalizeSVG(svg: string, options?: IExportSVGOptions, width?: number, height?: number, font?: string, fontSize?: string, background?: Color): string {\r\n\r\n\t\t// Construct width/height params\r\n\t\tlet dimParams = \"\";\r\n\t\tif (width) {\r\n\t\t\tdimParams += \"width=\\\"\" + width + \"px\\\" \";\r\n\t\t}\r\n\t\tif (height) {\r\n\t\t\tdimParams += \"height=\\\"\" + height + \"px\\\" \";\r\n\t\t}\r\n\r\n\t\t// Apply font settings\r\n\t\tlet styleParams = \"\";\r\n\t\tif (font) {\r\n\t\t\tstyleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n\t\t}\r\n\t\tif (fontSize) {\r\n\t\t\tstyleParams += \"font-size: \" + fontSize + \";\";\r\n\t\t}\r\n\t\t// Add missing <svg> enclosure\r\n\t\tif (!svg.match(/<svg/)) {\r\n\t\t\tsvg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (dimParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}\r\n\r\n\t\t\t/*if (styleParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\r\n\t\tif (background) {\r\n\t\t\tsvg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n\t\t\t//svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n\t\t}\r\n\r\n\t\tsvg = this.adapter.apply(\"normalizeSVG\", {\r\n\t\t\tdata: svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes an element and returns its contents.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {HTMLElement | SVGSVGElement}  element  An element to serialize\r\n\t * @return {string}                                A serialized XML\r\n\t */\r\n\tpublic serializeElement(element: HTMLElement | SVGSVGElement | SVGDefsElement): string {\r\n\t\treturn new XMLSerializer().serializeToString(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a PDF containing chart image.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportPDFOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t * @async\r\n\t * @todo Account for header when calculating vertical fit\r\n\t */\r\n\tpublic async getPDF(type: \"pdf\", options?: IExportPDFOptions): Promise<string> {\r\n\r\n\t\t// Get image\r\n\t\tlet image = await this.getImage(options.imageFormat || \"png\", options);\r\n\r\n\t\t// Load pdfmake\r\n\t\tlet pdfmake = await this.pdfmake;\r\n\r\n\t\t// Defaults\r\n\t\tlet defaultMargins = [30, 30, 30, 30];\r\n\r\n\t\t// Init content for PDF\r\n\t\tlet doc = {\r\n\t\t\tpageSize: options.pageSize || \"A4\",\r\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\r\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\r\n\t\t\t//header: <any>[],\r\n\t\t\tcontent: <any>[]\r\n\t\t};\r\n\r\n\t\t// Should we add title?\r\n\t\tlet title = this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this.title,\r\n\t\t\toptions: options\r\n\t\t}).title;\r\n\r\n\t\tif (title) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: title,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add page URL?\r\n\t\tif (options.addURL) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add image\r\n\t\tdoc.content.push({\r\n\t\t\timage: image,\r\n\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins)\r\n\t\t});\r\n\r\n\t\t// Apply adapters\r\n\t\tdoc = this.adapter.apply(\"pdfmakeDocument\", {\r\n\t\t\tdoc: doc,\r\n\t\t\toptions: options\r\n\t\t}).doc;\r\n\r\n\t\t// Create PDF\r\n\t\treturn await new Promise<string>((success, error) => {\r\n\t\t\tpdfmake.createPdf(doc).getDataUrl((uri: string) => {\r\n\t\t\t\tsuccess(uri);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fit dimensions for available page sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {pageSizes} pageSize Page size\r\n\t * @return {number[]}           `[width, height]` in pixels\r\n\t */\r\n\tpublic getPageSizeFit(pageSize: pageSizes, margins?: number | number[]): number[] {\r\n\r\n\t\t// Check margins\r\n\t\tlet newMargins = [0, 0, 0, 0];\r\n\t\tif (typeof margins == \"number\") {\r\n\t\t\tnewMargins = [margins, margins, margins, margins];\r\n\t\t}\r\n\t\telse if (margins.length == 2) {\r\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n\t\t}\r\n\t\telse if (margins.length == 4) {\r\n\t\t\tnewMargins = margins;\r\n\t\t}\r\n\r\n\t\t// Define available page sizes\r\n\t\tlet sizes = {\r\n\t\t\t\"4A0\": [4767.87, 6740.79],\r\n\t\t\t\"2A0\": [3370.39, 4767.87],\r\n\t\t\tA0: [2383.94, 3370.39],\r\n\t\t\tA1: [1683.78, 2383.94],\r\n\t\t\tA2: [1190.55, 1683.78],\r\n\t\t\tA3: [841.89, 1190.55],\r\n\t\t\tA4: [595.28, 841.89],\r\n\t\t\tA5: [419.53, 595.28],\r\n\t\t\tA6: [297.64, 419.53],\r\n\t\t\tA7: [209.76, 297.64],\r\n\t\t\tA8: [147.40, 209.76],\r\n\t\t\tA9: [104.88, 147.40],\r\n\t\t\tA10: [73.70, 104.88],\r\n\t\t\tB0: [2834.65, 4008.19],\r\n\t\t\tB1: [2004.09, 2834.65],\r\n\t\t\tB2: [1417.32, 2004.09],\r\n\t\t\tB3: [1000.63, 1417.32],\r\n\t\t\tB4: [708.66, 1000.63],\r\n\t\t\tB5: [498.90, 708.66],\r\n\t\t\tB6: [354.33, 498.90],\r\n\t\t\tB7: [249.45, 354.33],\r\n\t\t\tB8: [175.75, 249.45],\r\n\t\t\tB9: [124.72, 175.75],\r\n\t\t\tB10: [87.87, 124.72],\r\n\t\t\tC0: [2599.37, 3676.54],\r\n\t\t\tC1: [1836.85, 2599.37],\r\n\t\t\tC2: [1298.27, 1836.85],\r\n\t\t\tC3: [918.43, 1298.27],\r\n\t\t\tC4: [649.13, 918.43],\r\n\t\t\tC5: [459.21, 649.13],\r\n\t\t\tC6: [323.15, 459.21],\r\n\t\t\tC7: [229.61, 323.15],\r\n\t\t\tC8: [161.57, 229.61],\r\n\t\t\tC9: [113.39, 161.57],\r\n\t\t\tC10: [79.37, 113.39],\r\n\t\t\tRA0: [2437.80, 3458.27],\r\n\t\t\tRA1: [1729.13, 2437.80],\r\n\t\t\tRA2: [1218.90, 1729.13],\r\n\t\t\tRA3: [864.57, 1218.90],\r\n\t\t\tRA4: [609.45, 864.57],\r\n\t\t\tSRA0: [2551.18, 3628.35],\r\n\t\t\tSRA1: [1814.17, 2551.18],\r\n\t\t\tSRA2: [1275.59, 1814.17],\r\n\t\t\tSRA3: [907.09, 1275.59],\r\n\t\t\tSRA4: [637.80, 907.09],\r\n\t\t\tEXECUTIVE: [521.86, 756.00],\r\n\t\t\tFOLIO: [612.00, 936.00],\r\n\t\t\tLEGAL: [612.00, 1008.00],\r\n\t\t\tLETTER: [612.00, 792.00],\r\n\t\t\tTABLOID: [792.00, 1224.00]\r\n\t\t};\r\n\r\n\t\t// Calculate size\r\n\t\tlet fitSize = sizes[pageSize]\r\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\r\n\t\tfitSize[1] -= newMargins[1] + newMargins[3];\r\n\t\treturn fitSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Excel file of chart's data.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               type     Type of the export\r\n\t * @param {IExportExcelOptions}  options  Options\r\n\t * @return {Promise<string>}              Promise\r\n\t * @async\r\n\t * @todo Handle dates\r\n\t * @todo Support for multi-sheet\r\n\t */\r\n\tpublic async getExcel(type: \"xlsx\", options?: IExportExcelOptions): Promise<string> {\r\n\r\n\t\t// Load xlsx\r\n\t\tlet XLSX = await this.xlsx;\r\n\r\n\t\t// Create workbook options\r\n\t\tlet wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n\t\t\toptions: {\r\n\t\t\t\tbookType: \"xlsx\",\r\n\t\t\t\tbookSST: false,\r\n\t\t\t\ttype: \"base64\"\r\n\t\t\t}\r\n\t\t}).options;\r\n\r\n\t\t// Get sheet name\r\n\t\tlet sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n\t\t\tname: this.title || this.language.translate(\"Data\")\r\n\t\t}).name);\r\n\r\n\t\t// Create a workbook\r\n\t\tlet wb = {\r\n\t\t\tSheetNames: <any>[sheetName],\r\n\t\t\tSheets: <any>{}\r\n\t\t};\r\n\r\n\t\t// Init worksheet data\r\n\t\tlet data = [];\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.dataFields;\r\n\r\n\t\t// Add column names?\r\n\t\tif (options.addColumnNames) {\r\n\t\t\tdata.push(this.getExcelRow(dataFields, options));\r\n\t\t}\r\n\r\n\t\t// Add lines\r\n\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\tdata.push(this.getExcelRow(this.data[i], options, dataFields));\r\n\t\t}\r\n\r\n\t\t// Create sheet and add data\r\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n\r\n\t\t// Generate data uri\r\n\t\tlet uri = this.adapter.apply(\"getExcel\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * This is needed to work around Excel limitations.\r\n\t *\r\n\t * @param  {string}  name  Source name\r\n\t * @return {string}        Normalized name\r\n\t */\r\n\tprivate normalizeExcelSheetName(name: string): string {\r\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n\t\treturn $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * Rertuns an array of values to be used as Excel row.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}                  row         Row data\r\n\t * @param  {IExportExcelOptions}  options     Options\r\n\t * @param  {any}                  dataFields  Data fields\r\n\t * @return {any[]}                            Array of values\r\n\t */\r\n\tpublic getExcelRow(row: any, options?: IExportExcelOptions, dataFields?: any): any[] {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Process each row item\r\n\t\t$object.each(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Check if we need to skip\r\n\t\t\t/*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\r\n\t\t\titems.push(this.convertDateValue<\"xlsx\">(key, value, options));\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as CSV.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportCSVOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getCSV(type: \"csv\", options?: IExportCSVOptions): Promise<string> {\r\n\r\n\t\t// Init output\r\n\t\tlet csv = \"\";\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tlet br = \"\";\r\n\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\tlet row = this.getCSVRow(this.data[i], options, dataFields);\r\n\t\t\tif (options.reverse) {\r\n\t\t\t\tcsv = row + br + csv;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcsv += br + row;\r\n\t\t\t}\r\n\t\t\tbr = \"\\n\";\r\n\t\t}\r\n\r\n\t\t// Add column names?\r\n\t\tif (options.addColumnNames) {\r\n\t\t\tcsv = this.getCSVRow(dataFields, options) + br + csv;\r\n\t\t}\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getCSV\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of CSV data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}                row         An object holding data for the row\r\n\t * @param  {IExportCSVOptions}  options     Options\r\n\t * @param  {any}                dataFields  Data fields\r\n\t * @return {string}                         Formated CSV line\r\n\t */\r\n\tpublic getCSVRow(row: any, options?: IExportCSVOptions, dataFields?: any): string {\r\n\r\n\t\t// Init\r\n\t\tlet separator = options.separator || \",\";\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Process each row item\r\n\t\t$object.each(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Check if we need to skip\r\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\r\n\t\t\t/*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = this.convertDateValue<\"csv\">(key, value, options);\r\n\r\n\t\t\t// Cast and escape doublequotes\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/\"/g, '\"\"');\r\n\r\n\t\t\t// Enclose into double quotes\r\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t});\r\n\r\n\t\treturn items.join(separator);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data in JSON format.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}              type     Type of the export\r\n\t * @param {IExportJSONOptions}  options  Options\r\n\t * @return {Promise<string>}             Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getJSON(type: \"json\", options?: IExportJSONOptions): Promise<string> {\r\n\r\n\t\t// Stringify JSON\r\n\t\tlet json = JSON.stringify(this.data, (key, value) => {\r\n\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\tvalue[field] = this.convertDateValue<\"json\">(field, item, options);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, options.indent);\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getJSON\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the value to proper date format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}                                  field    Field name\r\n\t * @param  {any}                                     value    Value\r\n\t * @param  {IExportCSVOptions | IExportJSONOptions}  options  Options\r\n\t * @return {any}                                              Formatted date value or unmodified value\r\n\t */\r\n\tpublic convertDateValue<Key extends \"json\" | \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\r\n\t\t// Is this a timestamp?\r\n\t\tif (typeof value == \"number\" && this.isDateField(field)) {\r\n\t\t\tvalue = new Date(value);\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tif (options.useTimestamps) {\r\n\t\t\t\tvalue = value.getTime();\r\n\t\t\t}\r\n\t\t\telse if (options.useLocale) {\r\n\t\t\t\tvalue = value.toLocaleString();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.dateFormatter.format(value, this.dateFormat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts empty value based on `emptyAs` option.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tpublic convertEmptyValue<Key extends \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\t\treturn $type.hasValue(value) ? value : options.emptyAs;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers download of the file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param  {string}            uri       Data URI with file content\r\n\t * @param  {string}            fileName  File name\r\n\t * @return {Promise<boolean>}            Promise\r\n\t * @async\r\n\t */\r\n\tpublic async download(uri: string, fileName: string): Promise<boolean> {\r\n\r\n\t\t//if (window.navigator.msSaveOrOpenBlob === undefined) {\r\n\t\tif (this.linkDownloadSupport() && !this.blobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For regular browsers, we create a link then simulare click on it\r\n\t\t\t */\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\t//uri = uri.replace(/#/g, \"%23\");\r\n\t\t\tlink.href = uri;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\r\n\t\t}\r\n\t\telse if ($type.hasValue(window.navigator.msSaveBlob)) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\r\n\t\t\t */\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\t\t\t// Check if we need to Base64-decode\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\t// Prep Blob and force the download\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\r\n\t\t}\r\n\t\telse if (this.legacyIE()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Old IEs (9 and down) we will use an <iframe> trick\r\n\t\t\t */\r\n\r\n\t\t\tlet parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n\r\n\t\t\tif (parts.length === 4) {\r\n\t\t\t\t// Base64-encoded or text-based stuff?\r\n\t\t\t\tif (parts[2] == \"base64\") {\r\n\r\n\t\t\t\t\t// Base64-encoded - probably an image\r\n\t\t\t\t\tif (parts[1].match(/^image\\//)) {\r\n\r\n\t\t\t\t\t\t// Yep, an image. Let's create a temporary image placeholder,\r\n\t\t\t\t\t\t// so that user can use do Save As.\r\n\t\t\t\t\t\tthis.showModal(\r\n\t\t\t\t\t\t\t\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n\t\t\t\t\t\t\t\"<p>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\"\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\"</p>\" +\r\n\t\t\t\t\t\t\t\"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"(Press ESC to close this message)\"\r\n\t\t\t\t\t\t\t) + \"</small></p>\",\r\n\t\t\t\t\t\t\tthis.language.translate(\"Image Export Complete\")\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Text-based\r\n\r\n\t\t\t\t\t// IE9 is trippy about saving files with filenames of the extensions it\r\n\t\t\t\t\t// does not know. Let's use .txt extension for all text-based export\r\n\t\t\t\t\t// formats, except SVG.\r\n\t\t\t\t\tlet contentType;\r\n\t\t\t\t\tif (fileName.match(/\\.svg$/)) {\r\n\t\t\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcontentType = \"text/plain\";\r\n\t\t\t\t\t\tfileName += \".txt\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create temporary iframe\r\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.width = \"1px\";\r\n\t\t\t\t\tiframe.height = \"1px\"\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add our stuff to the document of the iframe and trigger save as\r\n\t\t\t\t\tlet idoc = iframe.contentDocument;\r\n\t\t\t\t\tidoc.open(contentType, \"replace\");\r\n\t\t\t\t\t// TODO test this with various encodings (e.g. UTF)\r\n\t\t\t\t\t//idoc.charset = parts[2].replace(/charset=/, \"\");\r\n\t\t\t\t\tidoc.write(decodeURIComponent(parts[3]));\r\n\t\t\t\t\tidoc.close();\r\n\t\t\t\t\tidoc.execCommand(\"SaveAs\", true, fileName);\r\n\r\n\t\t\t\t\t// Destroy the iframe\r\n\t\t\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if browser has any supported methods to trigger download\r\n\t * of a binary file.\r\n\t *\r\n\t * @return {boolean} Supports downloads?\r\n\t */\r\n\tpublic downloadSupport(): boolean {\r\n\t\treturn this.linkDownloadSupport() || this.blobDownloadSupport();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports \"download\" attribute on links.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Browser supports triggering downloads?\r\n\t */\r\n\tpublic linkDownloadSupport(): boolean {\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"linkDownloadSupport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet res = typeof a.download !== \"undefined\";\r\n\t\tregistry.setCache(\"linkDownloadSupport\", res);\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Browser supports triggering downloads?\r\n\t */\r\n\tpublic blobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this is a legacy version of IE.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} IE9 or less?\r\n\t */\r\n\tpublic legacyIE(): boolean {\r\n\t\t// Create a temporary <div> with conditional tags in it an an <i> tag.\r\n\t\t// Count <i>s. If there are some, we have IE9 or late on our hands.\r\n\t\tlet div = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n\t\treturn div.getElementsByTagName(\"i\").length == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates print of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               data     Data URI for the image\r\n\t * @param {IExportPrintOptions}  options  Options\r\n\t * @param {string}               title    Optional title to use (uses window's title by default)\r\n\t * @return {Promise<boolean>}             Promise\r\n\t * @async\r\n\t */\r\n\tpublic async print(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\tif (options.printMethod == \"css\") {\r\n\t\t\treturn this.printViaCSS(data, options, title);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.printViaIframe(data, options, title);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected async printViaCSS(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\t\t// Save current scroll position\r\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n\t\t// Hide all current nodes of the document and save their current states\r\n\t\t// of `display` style\r\n\t\t/*let states: Array<string> = [];\r\n\t\tlet items = document.body.childNodes;\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\tstates[i] = item.style.display;\r\n\t\t\t\titem.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Hide all document nodes by applyin custom CSS\r\n\t\tlet rule = new StyleRule(\"body > *\", {\r\n\t\t\t\"display\": \"none\",\r\n\t\t\t\"position\": \"fixed\",\r\n\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\"opacity\": \"0\",\r\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n\t\t});\r\n\r\n\t\t// Replace title?\r\n\t\tlet originalTitle: string;\r\n\t\tif (title && document && document.title) {\r\n\t\t\toriginalTitle = document.title;\r\n\t\t\tdocument.title = title;\r\n\t\t}\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.display = \"block\";\r\n\t\timg.style.position = \"relative\";\r\n\t\timg.style.visibility = \"visible\";\r\n\t\timg.style.opacity = \"1\";\r\n\t\timg.style.clipPath = \"none\";\r\n\t\tdocument.body.appendChild(img);\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\t(<any>window).print();\r\n\t\t}, 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(img);\r\n\r\n\t\t\t// Reset back all elements\r\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\t\titem.style.display = states[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\trule.dispose();\r\n\r\n\t\t\t// Restore title\r\n\t\t\tif (originalTitle) {\r\n\t\t\t\tdocument.title = document.title;\r\n\t\t\t}\r\n\r\n\t\t\t// Scroll back the document the way it was before\r\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n\r\n\t\t}, options.delay || 500);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected async printViaIframe(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\t// Create an iframe\r\n\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\tiframe.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t// This is needed for FireFox\r\n\t\tiframe.contentWindow.document.open();\r\n\t\tiframe.contentWindow.document.close();\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\tif (title) {\r\n\t\t\tiframe.contentWindow.document.title = title;\r\n\t\t}\r\n\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\r\n\t\t(<any>iframe).load = function() {\r\n\t\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\t\t};\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\r\n\t\t\t\t\t(<any>iframe).contentWindow.print()​​​​​​;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t(<any>iframe).contentWindow.print()​​​​​​;\r\n\t\t\t}\r\n\t\t}, options.delay || 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t}, options.delay + 50 || 100);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a background color for the element. If element is transparent it goes\r\n\t * up the DOM hierarchy to find a parent element that does.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element Element\r\n\t * @return {Color}            Color code\r\n\t */\r\n\tpublic findBackgroundColor(element: Element): Color {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet opacity = 1, currentColor = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tcurrentColor = (<any>element).currentStyle[\"background-color\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tcurrentColor = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"background-color\");\r\n\t\t}\r\n\r\n\t\t// Check opacity\r\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n\t\t\topacity = 0;\r\n\t\t}\r\n\r\n\t\tif (opacity == 0) {\r\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\r\n\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findBackgroundColor(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn color(\"#fff\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn color(currentColor, opacity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a font fmaily name for the element (directly set or\r\n\t * computed/inherited).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element  Element\r\n\t * @return {string}            Font family\r\n\t */\r\n\tpublic findFont(element: Element): string {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet font = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tfont = (<any>element).currentStyle[\"font-family\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tfont = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"font-family\");\r\n\t\t}\r\n\r\n\t\tif (!font) {\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findFont(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn font;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a font fmaily name for the element (directly set or\r\n\t * computed/inherited).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element  Element\r\n\t * @return {string}            Font family\r\n\t */\r\n\tpublic findFontSize(element: Element): string {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet font = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tfont = (<any>element).currentStyle[\"font-size\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tfont = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"font-size\");\r\n\t\t}\r\n\r\n\t\tif (!font) {\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findFont(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn font;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a container to be used to place [[ExportMenu]] in.\r\n\t *\r\n\t * @param {HTMLElement} value Reference\r\n\t */\r\n\tpublic set container(value: HTMLElement) {\r\n\t\tthis._container = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HTMLElement} Reference\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this.adapter.apply(\"container\", {\r\n\t\t\tcontainer: this._container\r\n\t\t}).container;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n\t * internal elements.\r\n\t *\r\n\t * @param {Sprite} value Sprite\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis._sprite = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Sprite} Sprite\r\n\t */\r\n\tpublic get sprite(): Sprite {\r\n\t\treturn this.adapter.apply(\"sprite\", {\r\n\t\t\tsprite: this._sprite\r\n\t\t}).sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Data to export.\r\n\t *\r\n\t * @param {any} value Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\treturn this.adapter.apply(\"data\", {\r\n\t\t\tdata: this._data\r\n\t\t}).data;\r\n\t}\r\n\r\n\t/**\r\n\t * Data fields in `{ field: fieldName }` format. Those are used for\r\n\t * exporting in data formats to name the columns.\r\n\t *\r\n\t * @param {any} value Field names\r\n\t */\r\n\tpublic set dataFields(value: any) {\r\n\t\tthis._dataFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Field names `{ field: fieldName }`\r\n\t */\r\n\tpublic get dataFields(): any {\r\n\t\tif (!this._dataFields) {\r\n\t\t\tthis.generateDataFields();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dataFields\", {\r\n\t\t\tdataFields: this._dataFields\r\n\t\t}).dataFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @param {any} value DateFormatter instance\r\n\t */\r\n\tpublic set dateFormatter(value: any) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} A DateFormatter instance\r\n\t */\r\n\tpublic get dateFormatter(): any {\r\n\t\tif (!this._dateFormatter) {\r\n\t\t\tthis._dateFormatter = new DateFormatter();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFormatter\", {\r\n\t\t\tdateFormatter: this._dateFormatter\r\n\t\t}).dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @param {Optional<string>} value Date format\r\n\t */\r\n\tpublic set dateFormat(value: $type.Optional<string>) {\r\n\t\tthis._dateFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Date format\r\n\t */\r\n\tpublic get dateFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"dateFormat\", {\r\n\t\t\tdateFormat: this._dateFormat\r\n\t\t}).dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold date values.\r\n\t *\r\n\t * @param {List<string>} value Date field list\r\n\t */\r\n\tpublic set dateFields(value: List<string>) {\r\n\t\tthis._dateFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {List<string>} Date field list\r\n\t */\r\n\tpublic get dateFields(): List<string> {\r\n\t\tif (!this._dateFields) {\r\n\t\t\tthis._dateFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFields\", {\r\n\t\t\tdateFields: this._dateFields\r\n\t\t}).dateFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates data fields out of the first row of data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic generateDataFields(): void {\r\n\t\tthis._dataFields = {};\r\n\t\tif (this.data.length) {\r\n\t\t\t$array.each(this.data, (row) => {\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (!$type.hasValue(this._dataFields[key])) {\r\n\t\t\t\t\t\tthis._dataFields[key] = this.adapter.apply(\"dataFieldName\", {\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tfield: key\r\n\t\t\t\t\t\t}).name;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `dateFields` property to determine if this field holds\r\n\t * dates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}        field   Field name\r\n\t * @param  {IExportOptions} options Options\r\n\t * @return {boolean}               `true` if it's a date field\r\n\t */\r\n\tpublic isDateField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDateField\", {\r\n\t\t\tisDateField: this.dateFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDateField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns proper content type for the export type.\r\n\t *\r\n\t * @param  {string}  type  Export format/type\r\n\t * @return {string}        Proper content type, i.e. \"image/jpeg\"\r\n\t */\r\n\tpublic getContentType<Key extends keyof IExportOptions>(type: Key): string {\r\n\r\n\t\tlet contentType = \"\";\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\t\tcontentType = \"image/\" + type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\tcontentType = \"image/jpeg\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\tcontentType = \"text/csv\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tcontentType = \"application/json\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pdf\":\r\n\t\t\t\tcontentType = \"application/pdf\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"contentType\", {\r\n\t\t\tcontentType: contentType,\r\n\t\t\ttype: type\r\n\t\t}).contentType;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A file prefix to be used for all exported formats.\r\n\t *\r\n\t * Export will apply format-related extension to it. E.g. if this is set to\r\n\t * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n\t *\r\n\t * @param {string} value File prefix\r\n\t */\r\n\tpublic set filePrefix(value: string) {\r\n\t\tthis._filePrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} File prefix\r\n\t */\r\n\tpublic get filePrefix(): string {\r\n\t\treturn this.adapter.apply(\"filePrefix\", {\r\n\t\t\tfilePrefix: this._filePrefix\r\n\t\t}).filePrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * A background color to be used for exported images. If set, this will\r\n\t * override the automatically acquired background color.\r\n\t *\r\n\t * @param {Optional<Color>} value Color\r\n\t */\r\n\tpublic set backgroundColor(value: $type.Optional<Color>) {\r\n\t\tthis._backgroundColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Color>} Background color\r\n\t */\r\n\tpublic get backgroundColor(): $type.Optional<Color> {\r\n\t\treturn this.adapter.apply(\"backgroundColor\", {\r\n\t\t\tbackgroundColor: this._backgroundColor\r\n\t\t}).backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * A title to be used when printing.\r\n\t *\r\n\t * @param {Optional<string>} value Title\r\n\t */\r\n\tpublic set title(value: $type.Optional<string>) {\r\n\t\tthis._title = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Title\r\n\t */\r\n\tpublic get title(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this._title\r\n\t\t}).title;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Add ability to change text\r\n\t */\r\n\tpublic showPreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 0.5;\r\n\t\t\tpreloader.label.text = \"...\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hidePreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n\t * exported.\r\n\t *\r\n\t * @return {Preloader} Preloader\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\treturn this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n\t\t\tthis._sprite.parent.preloader :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal saying export is taking longer than expected.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic showTimeout(): void {\r\n\t\tthis.showModal(\r\n\t\t\tthis.adapter.apply(\"timeoutMessage\", {\r\n\t\t\t\tmessage: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n\t\t\t}).message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideTimeout(): void {\r\n\t\tif (this._timeoutTimeout) {\r\n\t\t\tthis.removeDispose(this._timeoutTimeout);\r\n\t\t\tthis._timeoutTimeout = null;\r\n\t\t}\r\n\t\tthis.hideModal();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to be used for translations.\r\n\t *\r\n\t * @param {Language} value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tthis._language = new Language();\r\n\t\t}\r\n\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (and creates) [[Modal]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Modal} Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tif (!this._modal) {\r\n\t\t\tthis._modal = new Modal();\r\n\r\n\t\t\t// Prefix with Sprite's class name\r\n\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows [[Modal]] with specific text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string} text Modal contents\r\n\t */\r\n\tpublic showModal(text: string, title?: string): void {\r\n\r\n\t\t// Hide previous modal and preloader\r\n\t\tthis.hideModal();\r\n\t\tthis.hidePreloader();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.container = this.sprite.svgContainer.SVGContainer;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if one's currently open.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads canvg dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of canvg\r\n\t * @async\r\n\t */\r\n\tprivate async _canvg(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"canvg\" */ \"canvg\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvg instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of canvg\r\n\t */\r\n\tpublic get canvg(): Promise<any> {\r\n\t\treturn this._canvg();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads pdfmake dynamic module\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _pdfmake(): Promise<any> {\r\n\t\tlet a = await Promise.all([\r\n\t\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n\t\t\timport(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n\t\t]);\r\n\t\tlet pdfmake = a[0];\r\n\t\tlet vfs_fonts = a[1];\r\n\t\tconst global = <any>window;\r\n\t\tglobal.pdfMake = global.pdfMake || {};\r\n\t\tglobal.pdfMake.vfs = vfs_fonts.default;\r\n\t\tpdfmake.vfs = vfs_fonts.default;\r\n\t\treturn pdfmake;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pdfmake instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t */\r\n\tpublic get pdfmake(): Promise<any> {\r\n\t\treturn this._pdfmake();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads xlsx dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _xlsx(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"xlsx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns xlsx instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t */\r\n\tpublic get xlsx(): Promise<any> {\r\n\t\treturn this._xlsx();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets options for a format.\r\n\t *\r\n\t * @type {Key}\r\n\t */\r\n\tpublic setFormatOptions<Key extends keyof IExportOptions>(type: Key, options: IExportOptions[Key]): void {\r\n\t\tthis._formatOptions.setKey(type, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current options for a format.\r\n\t */\r\n\tpublic getFormatOptions<Key extends keyof IExportOptions>(type: Key): IExportOptions[Key] {\r\n\t\treturn this._formatOptions.getKey(type);\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected _disablePointers(): void {\r\n\t\tif (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t}\r\n\t\tthis.sprite.interactionsEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected _releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all elements that should not be included in the exported image.\r\n\t */\r\n\tprivate hideNonExportableSprites(): void {\r\n\t\tconst svgContainer = this.sprite.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\t$array.each(svgContainer.nonExportableSprites, (item) => {\r\n\t\t\t\tif (!item.isHidden && !item.isHiding) {\r\n\t\t\t\t\tthis._hiddenObjects.push(item);\r\n\t\t\t\t}\r\n\t\t\t\titem.hide(0);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Respores elements that were hidden before export.\r\n\t */\r\n\tprivate restoreNonExportableSprites(): void {\r\n\t\t$array.each(this._hiddenObjects, (item) => {\r\n\t\t\titem.show(0);\r\n\t\t});\r\n\t\tthis._hiddenObjects = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up menu\r\n\t\t\tif ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n\t\t\t\tconfig.menu.type = \"ExportMenu\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n"]}