{"version":3,"file":"Responsive.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Responsive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Responsive functionality module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters } from \"../Sprite\";\r\nimport { SpriteState } from \"../SpriteState\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { List } from \"../utils/List\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for the responsive rule, i.e. what overrides need to\r\n * be applied when certain conditions are matched.\r\n *\r\n * @important\r\n */\r\nexport interface IResponsiveRule {\r\n\r\n\t/**\r\n\t * A function which determines if this rule is relevant to current\r\n\t * conditions.\r\n\t *\r\n\t * Whenever the chrt size changes, this function will be run to determine\r\n\t * whether this rule needs to be applied.\r\n\t */\r\n\trelevant(target: Container): boolean;\r\n\r\n\t/**\r\n\t * A function which creates and returns a [[SpriteState]] that needs to be\r\n\t * set whenever rule should be applied.\r\n\t *\r\n\t * This is run only once.\r\n\t *\r\n\t * Once state is created, it is added to the Sprite's available states and\r\n\t * applied as necessary.\r\n\t */\r\n\tstate(target: Sprite, stateId: string): Optional<SpriteState<ISpriteProperties, ISpriteAdapters>>;\r\n\r\n\t/**\r\n\t * ID of the rule.\r\n\t */\r\n\tid?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Responsive]].\r\n */\r\nexport interface IResponsiveEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when a list of applicable rules for the current resolution\r\n\t * changes.\r\n\t */\r\n\truleschanged: {},\r\n\r\n\t/**\r\n\t * Invoked after each rule is applied to the actual element.\r\n\t */\r\n\truleapplied: {\r\n\r\n\t\t/**\r\n\t\t * A rule that was just applied.\r\n\t\t */\r\n\t\t\"rule\": IResponsiveRule\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Responsive]] class.\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResponsiveAdapters {\r\n\r\n\t/**\r\n\t * Are responsive features enabled?\r\n\t */\r\n\tenabled: boolean;\r\n\r\n\t/**\r\n\t * Use default rules?\r\n\t *\r\n\t * If this is set `false`, only user-defined rules will be applied.\r\n\t */\r\n\tuseDefault: boolean;\r\n\r\n\t/**\r\n\t * A list of user-defined rules.\r\n\t */\r\n\trules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of default rules.\r\n\t */\r\n\tdefaultRules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of **all** rules - user-defined and default combined.\r\n\t */\r\n\tallRules: List<IResponsiveRule>;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nexport class Responsive extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Holds a list of responsive rules organized by object type.\r\n\t */\r\n\tprotected _rules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of the default responsive rules.\r\n\t * @deprecated\r\n\t */\r\n\t//protected _defaultRules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of currently applied rules.\r\n\t */\r\n\tprotected _appliedRules: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Used to keep track of objects that have rules applied at the moment.\r\n\t */\r\n\tprotected _appliedTargets: string[] = [];\r\n\r\n\tprotected _timeout?: IDisposer;\r\n\r\n\t/**\r\n\t * Use default rules in addition to the user-defined ones?\r\n\t */\r\n\tprotected _useDefault = true;\r\n\r\n\t/**\r\n\t * A target object responsive rules apply to.\r\n\t */\r\n\tprotected _component: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IResponsiveEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IResponsiveAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<this, IResponsiveAdapters>(this);\r\n\r\n\t/**\r\n\t * Indicates of responsive rules application is enabled.\r\n\t */\r\n\tprotected _enabled = false;\r\n\r\n\t/**\r\n\t * Holds disposers for all events added by this class.\r\n\t */\r\n\tprotected _responsiveDisposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * Collection of objects and state ids that do not have any properties set.\r\n\t */\r\n\tprivate _noStates: string[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Responsive\";\r\n\r\n\t\t// Set up rules list events\r\n\t\tthis.rules.events.on(\"inserted\", () => { this.checkRules(); }, true);\r\n\t\tthis.rules.events.on(\"removed\", () => { this.checkRules(); }, true);\r\n\t\tthis._disposers.push(this.rules.events);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A target object that responsive rules will need to be applied to.\r\n\t *\r\n\t * @param value  Target object\r\n\t */\r\n\tpublic set component(value: $type.Optional<Component>) {\r\n\r\n\t\t// Check if it's the same\r\n\t\tif (value == this._component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if we already have a set up component and remove its events\r\n\t\tthis.disposeResponsiveHandlers();\r\n\r\n\t\t// Set\r\n\t\tthis._component = value;\r\n\r\n\t\t// Set up resize monitoring events\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", () => { this.checkRules(); }, this));\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", () => {\r\n\t\t\tif (this._component.isReady()) {\r\n\t\t\t\tthis.checkRules(true);\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\t// Enable resoponsive\r\n\t\tthis.enabled = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target object\r\n\t */\r\n\tpublic get component(): $type.Optional<Component> {\r\n\t\treturn this._component;\r\n\t}\r\n\r\n\t/**\r\n\t * Should responsive rules be checked against and applied?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Apply responsive rules?\r\n\t */\r\n\tpublic set enabled(value: boolean) {\r\n\t\tif (this._enabled != value) {\r\n\t\t\tthis._enabled = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Apply responsive rules?\r\n\t */\r\n\tpublic get enabled(): boolean {\r\n\t\treturn this.adapter.apply(\"enabled\", this._enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Should default responsive rules be applied in addition to user-defined\r\n\t * ones.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use default rules?\r\n\t */\r\n\tpublic set useDefault(value: boolean) {\r\n\t\tif (this._useDefault != value) {\r\n\t\t\tthis._useDefault = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default rules?\r\n\t */\r\n\tpublic get useDefault(): boolean {\r\n\t\treturn this.adapter.apply(\"useDefault\", this._useDefault);\r\n\t}\r\n\r\n\t/**\r\n\t * User-defined responsive rules.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * Use `allRules` to get all applicable rules including default and\r\n\t * user-defined ones.\r\n\t *\r\n\t * @param value  User-defined rules\r\n\t */\r\n\tpublic set rules(value: List<IResponsiveRule>) {\r\n\t\tthis._rules = value;\r\n\t\tthis._enabled = true;\r\n\t\tthis.applyRules();\r\n\t}\r\n\r\n\t/**\r\n\t * @return User-defined rules\r\n\t */\r\n\tpublic get rules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"rules\", this._rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Default responsive rules.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of responsive rules\r\n\t */\r\n\tpublic get defaultRules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"defaultRules\", defaultRules);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all rules: default rules (if not disabled) combined with\r\n\t * user-defined ones.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of all applicable rules\r\n\t */\r\n\tpublic get allRules(): List<IResponsiveRule> {\r\n\r\n\t\t// Create empty list\r\n\t\tlet rules = new List<IResponsiveRule>();\r\n\r\n\t\t// Add default rules if not disabled\r\n\t\t// A code, requesting `allRules` must ensure loading of default rules\r\n\t\t// by calling `loadDefaultRules()`\r\n\t\tif (this.useDefault) {\r\n\t\t\trules.copyFrom(this.defaultRules);\r\n\t\t}\r\n\r\n\t\t// Add user-defined ones\r\n\t\trules.copyFrom(this.rules);\r\n\r\n\t\treturn this.adapter.apply(\"allRules\", rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if rule by the particular id currently applied.\r\n\t *\r\n\t * @param ruleId  Rule ID\r\n\t * @return Is currently applied?\r\n\t */\r\n\tprotected isApplied(ruleId: string): boolean {\r\n\t\tconst rule = this._appliedRules[ruleId];\r\n\t\treturn $type.hasValue(rule) ? rule : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks which responsive rules currently satisfy their conditions and\r\n\t * should be applied, or unapplied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic checkRules(force: boolean = false): void {\r\n\r\n\t\t// Check if there are any rules\r\n\t\tlet rules = this.allRules;\r\n\t\tif (!rules || rules.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init a list of rules to be applied\r\n\t\tlet rulesChanged: boolean = false;\r\n\r\n\t\tconst component = $type.getValue(this.component);\r\n\r\n\t\t// Do not perform rule application of target has no size\r\n\t\tif (component.pixelWidth == 0 || component.pixelHeight == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check which rules match\r\n\t\t$iter.each(rules.iterator(), (rule) => {\r\n\r\n\t\t\t// Check if rule has an id\r\n\t\t\tif (!rule.id) {\r\n\t\t\t\trule.id = registry.getUniqueId();\r\n\t\t\t}\r\n\r\n\t\t\t// Init indicator if this rule should be applied\r\n\t\t\tlet apply = rule.relevant(component);\r\n\r\n\t\t\t// Let's check if this rule needs to be applied\r\n\t\t\tif ((apply && !this.isApplied(rule.id)) || (!apply && this.isApplied(rule.id))) {\r\n\t\t\t\trulesChanged = true;\r\n\t\t\t}\r\n\t\t\tthis._appliedRules[rule.id] = apply;\r\n\t\t});\r\n\r\n\t\tif (force) {\r\n\t\t\trulesChanged = true;\r\n\t\t}\r\n\r\n\t\t// Check if we need to re-apply the rules\r\n\t\tif (rulesChanged) {\r\n\r\n\t\t\tif (!this.component.isReady()) {\r\n\t\t\t\t// The chart is not yet ready (built)\r\n\t\t\t\t// We will hide the chart and delay application of rules\r\n\t\t\t\t// until \"ready\" event kicks in\r\n\t\t\t\t//component.hide(0);\r\n\t\t\t\tcomponent.hidden = true;\r\n\t\t\t\tcomponent.events.once(\"ready\", (ev) => {\r\n\t\t\t\t\tev.target.show(0);\r\n\t\t\t\t\tthis._applyRules();\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"ruleschanged\");\r\n\t\t\tthis._applyRules();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _applyRules(): void {\r\n\t\tif (this._timeout) {\r\n\t\t\tthis._timeout.dispose();\r\n\t\t}\r\n\t\tthis._timeout = this.setTimeout(() => {\r\n\t\t\tthis.applyRules();\r\n\t\t}, 10);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies current rules to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target Target object\r\n\t * @todo Better type check\r\n\t */\r\n\tpublic applyRules(target?: Container): void {\r\n\r\n\t\t// If no target supplied, we assume the top-level element\r\n\t\tconst newTarget = ($type.hasValue(target)\r\n\t\t\t? target\r\n\t\t\t: $type.getValue(this.component));\r\n\t\t// Check each rule\r\n\t\tlet defaultStateApplied = false;\r\n\t\tif (this.enabled) {\r\n\t\t\tlet isApplied = false;\r\n\t\t\t$iter.each(this.allRules.iterator(), (rule) => {\r\n\r\n\t\t\t\t// Get relevant state\r\n\t\t\t\tlet state = this.getState(rule, newTarget);\r\n\r\n\t\t\t\t// If there's a state, it means it needs to be applied\r\n\t\t\t\tif (state) {\r\n\r\n\t\t\t\t\t// Check if default state was already applied to this element.\r\n\t\t\t\t\t// We don't want to go resetting default states to ALL element,\r\n\t\t\t\t\t// if they don't have responsive states.\r\n\t\t\t\t\tif (!defaultStateApplied) {\r\n\t\t\t\t\t\t// Nope, reset states (instantly).\r\n\t\t\t\t\t\tif ($array.indexOf(this._appliedTargets, newTarget.uid) !== -1) {\r\n\t\t\t\t\t\t\t// But only if this element has any rules applied, otherwise no\r\n\t\t\t\t\t\t\t// point in setting current state\r\n\t\t\t\t\t\t\tnewTarget.setState(this.getDefaultState(newTarget), 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefaultStateApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Is this rule currently applied?\r\n\t\t\t\t\tif (this.isApplied($type.getValue(rule.id))) {\r\n\t\t\t\t\t\t// Yes. Apply the responsive state\r\n\t\t\t\t\t\tstate.transitionDuration = 0;\r\n\t\t\t\t\t\tthis.setTargetState(newTarget, state);\r\n\t\t\t\t\t\tthis.dispatchImmediately(\"ruleapplied\", {\r\n\t\t\t\t\t\t\trule: rule\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tisApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (isApplied) {\r\n\t\t\t\t$array.replace(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply rules to the children\r\n\t\tif (newTarget.children) {\r\n\t\t\t$iter.each(newTarget.children.iterator(), (child) => {\r\n\t\t\t\tthis.applyRules(child as Container);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative state for the rule/target, or `undefined` if no state is\r\n\t * needed.\r\n\t *\r\n\t * @param rule    [description]\r\n\t * @param target  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getState(rule: IResponsiveRule, target: any): Optional<SpriteState<any, any>> {\r\n\t\tlet stateId = \"responsive-\" + rule.id;\r\n\t\tlet tmpId = target.uid + \"_\" + stateId;\r\n\t\tif ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (!target.states.hasKey(stateId)) {\r\n\t\t\tlet state = rule.state(target, stateId);\r\n\t\t\tif (!state) {\r\n\t\t\t\tthis._noStates.push(tmpId);\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn target.states.getKey(stateId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns default responsive rule for the target.\r\n\t * \r\n\t * This rule will be used to \"reset\" to non-responsive values.\r\n\t * @param   target  Target Sprite\r\n\t * @return          State\r\n\t */\r\n\tprotected getDefaultState(target: any): SpriteState<any, any> {\r\n\t\tif (target.states.hasKey(\"responsive-default\")) {\r\n\t\t\treturn target.states.getKey(\"responsive-default\");\r\n\t\t}\r\n\t\treturn target.states.create(\"responsive-default\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets state on the target element and updates default state with the\r\n\t * overwritten values if needed.\r\n\t * \r\n\t * @param  target  Target\r\n\t * @param  state   State\r\n\t */\r\n\tprotected setTargetState(target: any, state: SpriteState<any, any>): void {\r\n\t\t// Update default state\r\n\t\tconst defaultState = this.getDefaultState(target);\r\n\t\t$object.each(state.properties, (key, val) => {\r\n\t\t\tif (!$type.hasValue(defaultState.properties[key])) {\r\n\t\t\t\tdefaultState.properties[key] = this.getValue(target, key);\r\n\t\t\t}\r\n\t\t});\r\n\t\ttarget.setState(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a value from an element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target    Target object\r\n\t * @param property  Property\r\n\t * @return Property value\r\n\t */\r\n\tpublic getValue(target: any, property: string): any {\r\n\t\t// This is a bit hacky, first we check if the property exist.\r\n\t\t// If it doesn't we try accessing target's property directly\r\n\t\tlet value: any = target.getPropertyValue(property);\r\n\t\tif (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n\t\t\tvalue = target[property];\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.disposeResponsiveHandlers();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all event handlers.\r\n\t */\r\n\tprotected disposeResponsiveHandlers(): void {\r\n\t\tlet disposer = this._responsiveDisposers.pop();\r\n\t\twhile (disposer) {\r\n\t\t\tdisposer.dispose();\r\n\t\t\tdisposer = this._responsiveDisposers.pop();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\r\nexport let defaultRules = new List<IResponsiveRule>();\r\ndefaultRules.events.on(\"inserted\", (ev) => {\r\n\tev.newValue.id = registry.getUniqueId();\r\n});\r\n\r\n/**\r\n *\r\n * @todo description\r\n */\r\nexport class ResponsiveBreakpoints {\r\n\r\n\t// Named pixel breakpoints\r\n\tstatic XXS = 100;\r\n\tstatic XS = 200;\r\n\tstatic S = 300;\r\n\tstatic M = 400;\r\n\tstatic L = 600;\r\n\tstatic XL = 800;\r\n\tstatic XXL = 1000;\r\n\r\n\t// Breakpoint functions (for use in `relevant` clause of the responsive rules)\r\n\r\n\tstatic widthXXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic widthXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic widthS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic widthM(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic widthL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic widthXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic widthXXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic heightXXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic heightXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic heightS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic heightM(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic heightL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic heightXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic heightXXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic isXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) && (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic isXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) && (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic isS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) && (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic isM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) && (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic isL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) && (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic isXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) && (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic isXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) && (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n\r\n\r\n\tstatic maybeXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) || (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic maybeXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) || (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic maybeS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) || (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic maybeM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) || (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic maybeL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) || (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic maybeXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) || (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic maybeXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) || (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n}\r\n"]}